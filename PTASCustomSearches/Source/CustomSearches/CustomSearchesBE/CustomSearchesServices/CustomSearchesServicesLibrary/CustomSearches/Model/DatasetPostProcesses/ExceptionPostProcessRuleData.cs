namespace CustomSearchesServicesLibrary.CustomSearches.Model.DatasetPostProcesses
{
    using System.Collections.Generic;
    using System.Linq;
    using CustomSearchesEFLibrary.CustomSearches.Model;
    using CustomSearchesServicesLibrary.CustomSearches.Enumeration;
    using CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches;

    /// <summary>
    /// Model for the data of the exception post process rule.
    /// </summary>
    public class ExceptionPostProcessRuleData
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ExceptionPostProcessRuleData" /> class.
        /// </summary>
        /// <param name="postProcessRule">The post process rule.</param>
        /// <param name="initializationType">Type of the initialization.</param>
        public ExceptionPostProcessRuleData()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ExceptionPostProcessRuleData" /> class.
        /// </summary>
        /// <param name="postProcessRule">The post process rule.</param>
        /// <param name="initializationType">Type of the initialization.</param>
        /// <param name="includeAutoGenerated">Value indicating whether the auto genereated expressions should be included.</param>
        public ExceptionPostProcessRuleData(ExceptionPostProcessRule postProcessRule, ModelInitializationType initializationType, bool includeAutoGenerated = false)
        {
            this.ExceptionPostProcessRuleId = postProcessRule.ExceptionPostProcessRuleId;
            this.DatasetPostProcessId = postProcessRule.DatasetPostProcessId;
            this.Description = postProcessRule.Description;
            this.GroupName = postProcessRule.GroupName;

            if (initializationType == ModelInitializationType.FullObject ||
                initializationType == ModelInitializationType.FullObjectWithDepedendencies)
            {
                if (postProcessRule.CustomSearchExpression != null && postProcessRule.CustomSearchExpression.Count > 0)
                {
                    var expressionsData = new List<CustomSearchExpressionData>();

                    var expressions = postProcessRule.CustomSearchExpression.OrderBy(e => e.ExecutionOrder);
                    foreach (var expression in expressions)
                    {
                        if (!includeAutoGenerated && expression.IsAutoGenerated)
                        {
                            continue;
                        }

                        expressionsData.Add(new CustomSearchExpressionData(expression, initializationType));
                    }

                    this.CustomSearchExpressions = expressionsData.ToArray();
                }
            }
        }

        /// <summary>
        /// Gets or sets the exception post process rule id.
        /// </summary>
        public int ExceptionPostProcessRuleId { get; set; }

        /// <summary>
        /// Gets or sets the dataset post process id.
        /// </summary>
        public int DatasetPostProcessId { get; set; }

        /// <summary>
        /// Gets or sets the description.
        /// </summary>
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the group name.
        /// </summary>
        public string GroupName { get; set; }

        /// <summary>
        /// Gets or sets the custom search expressions.
        /// </summary>
        public CustomSearchExpressionData[] CustomSearchExpressions { get; set; }

        /// <summary>
        /// Converts to an entity framework model.
        /// </summary>
        /// <param name="expressions">The expressions in the Exception PostProcess Rule and child objects.</param>
        /// <returns>
        /// The entity framework model and the list of generated expressions.
        /// </returns>
        public ExceptionPostProcessRule ToEfModel(out List<CustomSearchExpression> expressions)
        {
            var toReturn = new ExceptionPostProcessRule()
            {
                DatasetPostProcessId = this.DatasetPostProcessId,
                ExceptionPostProcessRuleId = this.ExceptionPostProcessRuleId,
                Description = this.Description,
                GroupName = this.GroupName
            };

            expressions = new List<CustomSearchExpression>();

            if (this.CustomSearchExpressions != null)
            {
                toReturn.CustomSearchExpression = new List<CustomSearchExpression>();
                foreach (var expression in this.CustomSearchExpressions)
                {
                    CustomSearchExpression newExpression = expression.ToEfModel();
                    newExpression.ExceptionPostProcessRuleId = this.ExceptionPostProcessRuleId;
                    newExpression.ExceptionPostProcessRule = toReturn;
                    newExpression.OwnerType = "ExceptionPostProcessRule";
                    toReturn.CustomSearchExpression.Add(newExpression);
                    expressions.Add(newExpression);
                }
            }

            return toReturn;
        }
    }
}
