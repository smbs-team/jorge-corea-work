namespace CustomSearchesServicesLibrary.CustomSearches.Model.DatasetPostProcesses
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using CustomSearchesEFLibrary.CustomSearches.Model;
    using CustomSearchesServicesLibrary.Auth;
    using CustomSearchesServicesLibrary.Auth.Model;
    using CustomSearchesServicesLibrary.CustomSearches.Enumeration;
    using CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches;

    /// <summary>
    /// Model for the data of the dataset post process.
    /// </summary>
    public class DatasetPostProcessData
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DatasetPostProcessData"/> class.
        /// </summary>
        public DatasetPostProcessData()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DatasetPostProcessData" /> class.
        /// </summary>
        /// <param name="postProcess">The post process.</param>
        /// <param name="initializationType">Type of the initialization.</param>
        /// <param name="userDetails">The user details.</param>
        /// <param name="includeAutoGenerated">Value indicating whether the auto genereated expressions should be included.</param>
        public DatasetPostProcessData(
            DatasetPostProcess postProcess,
            ModelInitializationType initializationType,
            Dictionary<Guid, UserInfoData> userDetails,
            bool includeAutoGenerated = false)
        {
            this.DatasetId = postProcess.DatasetId;
            this.DatasetPostProcessId = postProcess.DatasetPostProcessId;
            this.PrimaryDatasetPostProcessId = postProcess.PrimaryDatasetPostProcessId;
            this.ResultPayload = postProcess.ResultPayload;
            this.PostProcessName = postProcess.PostProcessName;
            this.PostProcessDefinition = postProcess.PostProcessDefinition;
            this.PostProcessType = postProcess.PostProcessType;
            this.PostProcessSubType = postProcess.PostProcessSubType;
            this.CreatedBy = postProcess.CreatedBy;
            this.LastModifiedBy = postProcess.LastModifiedBy;
            this.CreatedTimestamp = postProcess.CreatedTimestamp;
            this.LastModifiedTimestamp = postProcess.LastModifiedTimestamp;
            this.LastExecutionTimestamp = postProcess.LastExecutionTimestamp;
            this.IsDirty = postProcess.IsDirty;
            this.PostProcessRole = postProcess.PostProcessRole;
            this.RscriptModelId = postProcess.RscriptModelId;
            this.Priority = postProcess.Priority;

            this.TraceEnabledFields = JsonHelper.DeserializeObject(postProcess.TraceEnabledFields);

            UserDetailsHelper.GatherUserDetails(postProcess.CreatedByNavigation, userDetails);
            UserDetailsHelper.GatherUserDetails(postProcess.LastModifiedByNavigation, userDetails);

            if (initializationType == ModelInitializationType.FullObject ||
                initializationType == ModelInitializationType.FullObjectWithDepedendencies)
            {
                if (postProcess.InversePrimaryDatasetPostProcess?.Count > 0)
                {
                    var secondaryDatasetIds = new List<Guid>();
                    foreach (var inversePrimaryDatasetPostProcess in postProcess.InversePrimaryDatasetPostProcess)
                    {
                        secondaryDatasetIds.Add(inversePrimaryDatasetPostProcess.DatasetId);
                    }

                    this.SecondaryDatasets = secondaryDatasetIds.ToArray();
                }

                if (postProcess.CustomSearchExpression != null && postProcess.CustomSearchExpression.Count > 0)
                {
                    var expressionsData = new List<CustomSearchExpressionData>();

                    var expressions = postProcess.CustomSearchExpression.OrderBy(e => e.ExecutionOrder);
                    foreach (var expression in expressions)
                    {
                        if (!includeAutoGenerated && expression.IsAutoGenerated)
                        {
                            continue;
                        }

                        expressionsData.Add(new CustomSearchExpressionData(expression, initializationType));
                    }

                    this.CustomSearchExpressions = expressionsData.ToArray();
                }

                if (postProcess.ExceptionPostProcessRule != null && postProcess.ExceptionPostProcessRule.Count > 0)
                {
                    var exceptionsData = new List<ExceptionPostProcessRuleData>();

                    var exceptionPostProcessRules = postProcess.ExceptionPostProcessRule.OrderBy(e => e.ExecutionOrder);
                    foreach (var exception in exceptionPostProcessRules)
                    {
                        var exceptionPostProcessRuleData = new ExceptionPostProcessRuleData(exception, initializationType, includeAutoGenerated);
                        if (exceptionPostProcessRuleData.CustomSearchExpressions?.Count() > 0)
                        {
                            exceptionsData.Add(exceptionPostProcessRuleData);
                        }
                    }

                    this.ExceptionPostProcessRules = exceptionsData.ToArray();
                }
            }

            if (initializationType == ModelInitializationType.FullObjectWithDepedendencies)
            {
            }
        }

        /// <summary>
        /// Gets or sets the dataset post process id.
        /// </summary>
        public int DatasetPostProcessId { get; set; }

        /// <summary>
        /// Gets or sets the dataset id.
        /// </summary>
        public Guid DatasetId { get; set; }

        /// <summary>
        /// Gets or sets the priority.
        /// </summary>
        public int Priority { get; set; }

        /// <summary>
        /// Gets or sets the post process type.
        /// </summary>
        public string PostProcessType { get; set; }

        /// <summary>
        /// Gets or sets the post process sub type.
        /// </summary>
        public string PostProcessSubType { get; set; }

        /// <summary>
        /// Gets or sets the rscript model id.
        /// </summary>
        public int? RscriptModelId { get; set; }

        /// <summary>
        /// Gets or sets the post process definition.
        /// </summary>
        public string PostProcessDefinition { get; set; }

        /// <summary>
        /// Gets or sets the post process name.
        /// </summary>
        public string PostProcessName { get; set; }

        /// <summary>
        /// Gets or sets the result payload.
        /// </summary>
        public string ResultPayload { get; set; }

        /// <summary>
        /// Gets or sets the created by field.
        /// </summary>
        public Guid CreatedBy { get; set; }

        /// <summary>
        /// Gets or sets the last modified by field.
        /// </summary>
        public Guid LastModifiedBy { get; set; }

        /// <summary>
        /// Gets or sets the created time stamp.
        /// </summary>
        public DateTime CreatedTimestamp { get; set; }

        /// <summary>
        /// Gets or sets the last modified time stamp.
        /// </summary>
        public DateTime LastModifiedTimestamp { get; set; }

        /// <summary>
        /// Gets or sets the last execution time stamp.
        /// </summary>
        public DateTime? LastExecutionTimestamp { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether the dataset post process is dirty.
        /// </summary>
        public bool IsDirty { get; set; }

        /// <summary>
        /// Gets or sets the post process role.
        /// </summary>
        public string PostProcessRole { get; set; }

        /// <summary>
        /// Gets or sets the trace enabled fields.
        /// </summary>
        public object TraceEnabledFields { get; set; }

        /// <summary>
        /// Gets or sets the primary dataset id.
        /// </summary>
        public int? PrimaryDatasetPostProcessId { get; set; }

        /// <summary>
        /// Gets or sets the secondary datasets.
        /// </summary>
        public Guid[] SecondaryDatasets { get; set; }

        /// <summary>
        /// Gets or sets the custom search expressions.
        /// </summary>
        public CustomSearchExpressionData[] CustomSearchExpressions { get; set; }

        /// <summary>
        /// Gets or sets the exception post process rules.
        /// </summary>
        public ExceptionPostProcessRuleData[] ExceptionPostProcessRules { get; set; }

        /// <summary>
        /// Converts to an entity framework model.
        /// </summary>
        /// <param name="datasetPostProcess">The dataset post process.</param>
        /// <param name="ownerDataset">The dataset who owns the cloned post process.</param>
        /// <param name="ownerUserId">The user who owns the cloned post process.</param>
        /// <returns>
        /// The cloned dataset post process.
        /// </returns>
        public static DatasetPostProcess Clone(DatasetPostProcess datasetPostProcess, Dataset ownerDataset = null, Guid? ownerUserId = null)
        {
            DatasetPostProcess toReturn;

            var postProcessData =
                new DatasetPostProcessData(datasetPostProcess, ModelInitializationType.FullObjectWithDepedendencies, userDetails: null, includeAutoGenerated: true);

            toReturn = postProcessData.ToEfModel(out _);
            toReturn.DatasetPostProcessId = 0;
            toReturn.IsDirty = true;
            toReturn.CreatedTimestamp = DateTime.UtcNow;
            toReturn.LastModifiedTimestamp = DateTime.UtcNow;
            toReturn.Priority = datasetPostProcess.Priority;

            if (ownerUserId != null)
            {
                toReturn.CreatedBy = (Guid)ownerUserId;
                toReturn.LastModifiedBy = (Guid)ownerUserId;
            }

            if (ownerDataset != null)
            {
                toReturn.Dataset = ownerDataset;
                ownerDataset.DatasetPostProcess.Add(toReturn);
            }

            foreach (var exceptionPostProcessRule in toReturn.ExceptionPostProcessRule)
            {
                exceptionPostProcessRule.ExceptionPostProcessRuleId = 0;

                foreach (var expression in exceptionPostProcessRule.CustomSearchExpression)
                {
                    expression.CustomSearchExpressionId = 0;
                }
            }

            return toReturn;
        }

        /// <summary>
        /// Converts to an entity framework model.
        /// </summary>
        /// <param name="expressions">The expressions in the PostProcess and child objects.</param>
        /// <returns>
        /// The entity framework model and the list of generated expressions.
        /// </returns>
        public DatasetPostProcess ToEfModel(out List<CustomSearchExpression> expressions)
        {
            var toReturn = new DatasetPostProcess()
            {
                DatasetPostProcessId = this.DatasetPostProcessId,
                PrimaryDatasetPostProcessId = this.PrimaryDatasetPostProcessId,
                DatasetId = this.DatasetId,
                ResultPayload = this.ResultPayload,
                PostProcessName = this.PostProcessName,
                PostProcessDefinition = this.PostProcessDefinition,
                PostProcessType = this.PostProcessType,
                PostProcessSubType = this.PostProcessSubType,
                CreatedBy = this.CreatedBy,
                LastModifiedBy = this.LastModifiedBy,
                CreatedTimestamp = this.CreatedTimestamp,
                LastModifiedTimestamp = this.LastModifiedTimestamp,
                LastExecutionTimestamp = this.LastExecutionTimestamp,
                IsDirty = this.IsDirty,
                PostProcessRole = this.PostProcessRole,
                RscriptModelId = this.RscriptModelId
            };

            expressions = new List<CustomSearchExpression>();

            if (this.CustomSearchExpressions != null)
            {
                toReturn.CustomSearchExpression = new List<CustomSearchExpression>();
                foreach (var expression in this.CustomSearchExpressions)
                {
                    CustomSearchExpression newExpression = expression.ToEfModel();
                    newExpression.DatasetPostProcessId = this.DatasetPostProcessId;
                    newExpression.DatasetPostProcess = toReturn;
                    newExpression.OwnerType = CustomSearchExpressionOwnerType.DatasetPostProcess.ToString();
                    toReturn.CustomSearchExpression.Add(newExpression);
                    expressions.Add(newExpression);
                }
            }

            if (this.ExceptionPostProcessRules != null)
            {
                toReturn.ExceptionPostProcessRule = new List<ExceptionPostProcessRule>();
                foreach (var expression in this.ExceptionPostProcessRules)
                {
                    List<CustomSearchExpression> postProcessRuleExpressions;
                    ExceptionPostProcessRule newRule = expression.ToEfModel(out postProcessRuleExpressions);
                    newRule.DatasetPostProcessId = this.DatasetPostProcessId;
                    newRule.DatasetPostProcess = toReturn;
                    toReturn.ExceptionPostProcessRule.Add(newRule);
                    expressions.AddRange(postProcessRuleExpressions);
                }
            }

            toReturn.TraceEnabledFields = JsonHelper.SerializeObject(this.TraceEnabledFields);

            return toReturn;
        }
    }
}
