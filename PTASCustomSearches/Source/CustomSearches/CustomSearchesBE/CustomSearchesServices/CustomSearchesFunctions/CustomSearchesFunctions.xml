<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CustomSearchesFunctions</name>
    </assembly>
    <members>
        <member name="T:CustomSearchesFunctions.Auth.Functions.GetCurrentUserInfo">
            <summary>
            Azure function class to get the current user information.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Auth.Functions.GetCurrentUserInfo.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Auth.Functions.GetCurrentUserInfo.#ctor(CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Auth.Functions.GetCurrentUserInfo"/> class.
            </summary>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Auth.Functions.GetCurrentUserInfo.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the current user information.
            </summary>
            <group>Auth</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/Auth/GetCurrentUserInfo/</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>
            The user info.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Auth.Functions.GetUserInfo">
            <summary>
            Azure function class to get an user information.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Auth.Functions.GetUserInfo.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Auth.Functions.GetUserInfo.#ctor(CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Auth.Functions.GetUserInfo"/> class.
            </summary>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Auth.Functions.GetUserInfo.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets an user information.
            </summary>
            <group>Auth</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/Auth/GetUserInfo/{userId}</url>
            <param name="req">The request.</param>
            <param name="userId" cref="T:System.Guid" in="path">The user id.</param>
            <param name="log">The log.</param>
            <returns>
            The user info.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.AddCalculatedColumn">
            <summary>
            Azure function class for the AddCalculatedColumn service.  The service adds a calculated column to the dataset view.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.AddCalculatedColumn.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.AddCalculatedColumn.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.AddCalculatedColumn.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.AddCalculatedColumn.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.AddCalculatedColumn"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.AddCalculatedColumn.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Adds a calculated column to the dataset view.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/AddCalculatedColumn/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Datasets.CalculatedColumnData" in="body">Colum data.</param>
            <returns>
            The action result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.AssignFolderToDataset">
            <summary>
            Azure function class for the AssignFolderToDataset service.  The service assigns the folder to dataset.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.AssignFolderToDataset.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.AssignFolderToDataset.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.AssignFolderToDataset.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.AssignFolderToDataset.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.AssignFolderToDataset"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.AssignFolderToDataset.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Assigns folder to dataset.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/AssignFolderToDataset/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.AssignFolderToDatasetData" in="body">The folder data.</param>
            <returns>
            The task result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="405" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Operation not supported.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CreateFolder">
            <summary>
            Azure function class for the CreateFolder service.  The service creates the folder.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CreateFolder.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CreateFolder.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CreateFolder.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CreateFolder.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CreateFolder"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CreateFolder.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Creates the user map.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/CreateDatasetFolder</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CreateFolderData" in="body">Folder data.</param>
            <returns>
            The folder id.
            </returns>
            <response code="200" cref="T:System.Int32">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.DeleteAnnualUpdateAdjustments">
            <summary>
            Azure function class for the DeleteAnnualUpdateAdjustments service.
            The service deletes the annual update post processes.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.DeleteAnnualUpdateAdjustments.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.DeleteAnnualUpdateAdjustments.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.DeleteAnnualUpdateAdjustments.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.DeleteAnnualUpdateAdjustments"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.DeleteAnnualUpdateAdjustments.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes the annual update adjustments post processes.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/DeleteAnnualUpdateAdjustments/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <returns>
            Operation result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.DeleteLandModel">
            <summary>
            Azure function class for the DeleteLandModel service.
            The service deletes the land model post processes.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.DeleteLandModel.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.DeleteLandModel.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.DeleteLandModel.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.DeleteLandModel"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.DeleteLandModel.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes the land model post processes.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/DeleteLandModel/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <returns>
            Operation result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportAnnualUpdateAdjustmentsPostProcess">
            <summary>
            Azure function class for the ImportAnnualUpdateAdjustmentsPostProcess service.  The service imports the annual update adjustments post process.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportAnnualUpdateAdjustmentsPostProcess.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportAnnualUpdateAdjustmentsPostProcess.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportAnnualUpdateAdjustmentsPostProcess.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportAnnualUpdateAdjustmentsPostProcess.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportAnnualUpdateAdjustmentsPostProcess"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/IServiceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportAnnualUpdateAdjustmentsPostProcess.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports the annual update adjustments post process.
            The name, role and type are used as the key to identify the post-process. If no matching post-process is found, a new one is created.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ImportAnnualUpdateAdjustmentsPostProcess</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.DatasetPostProcesses.DatasetPostProcessData" in="body">Post process to import.</param>
            <returns>
            The post process id.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.ExpressionValidationFailedResponse">Bad request. Also can return a ErrorResultModel.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportLandScheduleAdjustmentsPostProcess">
            <summary>
            Azure function class for the ImportLandScheduleAdjustmentsPostProcess service.  The service imports the land schedule adjustments post process.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportLandScheduleAdjustmentsPostProcess.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportLandScheduleAdjustmentsPostProcess.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportLandScheduleAdjustmentsPostProcess.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportLandScheduleAdjustmentsPostProcess.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportLandScheduleAdjustmentsPostProcess"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/IServiceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportLandScheduleAdjustmentsPostProcess.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports the land schedule adjustments post process.
            The name, role and type are used as the key to identify the post-process. If no matching post-process is found, a new one is created.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ImportLandScheduleAdjustmentsPostProcess</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.DatasetPostProcesses.DatasetPostProcessData" in="body">Post process to import.</param>
            <returns>
            The post process id.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.ExpressionValidationFailedResponse">Bad request. Also can return a ErrorResultModel.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportNonWaterfrontSchedulePostProcess">
            <summary>
            Azure function class for the ImportNonWaterfrontSchedulePostProcess service.  The service imports the non-waterfront schedule post process.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportNonWaterfrontSchedulePostProcess.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportNonWaterfrontSchedulePostProcess.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportNonWaterfrontSchedulePostProcess.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportNonWaterfrontSchedulePostProcess.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportNonWaterfrontSchedulePostProcess"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/IServiceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportNonWaterfrontSchedulePostProcess.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports and executes the non-waterfront schedule post process.
            The name, role and type are used as the key to identify the post-process. If no matching post-process is found, a new one is created.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ImportNonWaterfrontSchedulePostProcess</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.DatasetPostProcesses.DatasetPostProcessData" in="body">Post process to import.</param>
            <returns>
            The job id.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.ExpressionValidationFailedResponse">Bad request. Also can return a ErrorResultModel.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportWaterfrontSchedulePostProcess">
            <summary>
            Azure function class for the ImportWaterfrontSchedulePostProcess service.  The service imports the waterfront schedule post process.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportWaterfrontSchedulePostProcess.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportWaterfrontSchedulePostProcess.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportWaterfrontSchedulePostProcess.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportWaterfrontSchedulePostProcess.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportWaterfrontSchedulePostProcess"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/IServiceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.ImportWaterfrontSchedulePostProcess.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports and executes the waterfront schedule post process.
            The name, role and type are used as the key to identify the post-process. If no matching post-process is found, a new one is created.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ImportWaterfrontSchedulePostProcess</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.DatasetPostProcesses.DatasetPostProcessData" in="body">Post process to import.</param>
            <returns>
            The job id.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.ExpressionValidationFailedResponse">Bad request. Also can return a ErrorResultModel.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.SetupAnnualUpdateAdjustments">
            <summary>
            Azure function class for the SetupAnnualUpdateAdjustments service.
            The service setups the annual update adjustments creating the required post processes.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.SetupAnnualUpdateAdjustments.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.SetupAnnualUpdateAdjustments.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.SetupAnnualUpdateAdjustments.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.SetupAnnualUpdateAdjustments.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.SetupAnnualUpdateAdjustments"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.SetupAnnualUpdateAdjustments.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Setups the annual update adjustments creating the required post processes.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/SetupAnnualUpdateAdjustments/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.SetupAnnualUpdateAdjustmentsData" in="body">The setup annual update adjustments data.</param>
            <returns>
            The annual update adjustments post processes.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomImporters.SetupAnnualUpdateAdjustmentsResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.SetupLandModel">
            <summary>
            Azure function class for the SetupLandModel service.
            The service setups the land model creating the required post processes.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.SetupLandModel.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.SetupLandModel.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.SetupLandModel.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.SetupLandModel.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.SetupLandModel"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomImporters.SetupLandModel.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Setups the land model creating the required post processes.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/SetupLandModel/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.SetupLandModelData" in="body">The setup land model data.</param>
            <returns>
            The non-waterfront, the waterfront and the adjustment post processes.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomImporters.SetupLandModelResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteCustomSearch">
            <summary>
            Azure function class for the DeleteCustomSearch service.  The service soft deletes a custom search.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteCustomSearch.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteCustomSearch.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteCustomSearch.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteCustomSearch"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteCustomSearch.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Soft deletes a custom search.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/DeleteCustomSearch/{customSearchId}</url>
            <param name="req">The request.</param>
            <param name="customSearchId" cref="T:System.Int32" in="path">The custom search definition id.</param>
            <param name="log">The log.</param>
            <returns>
            Operation result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ExecuteCustomSearch">
            <summary>
            Azure function class for the ExecuteCustomSearch service.  The service executes a custom search
            and returns an id that can be used to retrieve the data.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ExecuteCustomSearch.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ExecuteCustomSearch.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ExecuteCustomSearch.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ExecuteCustomSearch.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ExecuteCustomSearch"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ExecuteCustomSearch.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Executes a custom search.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ExecuteCustomSearch/{customSearchDefinitionId}</url>
            <param name="req">The request.</param>
            <param name="customSearchDefinitionId" cref="T:System.Int32" in="path">The custom search definition to execute.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.ExecuteCustomSearchData" in="body">Custom search data.</param>
            <param name="validate" cref="T:System.Boolean" in="query">Value indicating whether the custom search should be validated.</param>
            <returns>
            A unique Id that can be used to get the database data.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.ExecuteCustomSearchResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchCategories">
            <summary>
            Azure function class for the GetCustomSearchCategories service.  The service gets the custom search categories.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchCategories.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchCategories.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchCategories.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchCategories"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchCategories.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the custom search categories.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetCustomSearchCategories</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>
            The collection of custom search categories.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.GetCustomSearchCategoriesResponse">The request succeeded.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchesByCategory">
            <summary>
            Azure function class for the GetCustomSearchesByCategory service.  The service gets the custom search definitions by category.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchesByCategory.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchesByCategory.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchesByCategory.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchesByCategory"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchesByCategory.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the custom searches by category.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetCustomSearchesByCategory/{categoryId}</url>
            <param name="req">The request.</param>
            <param name="categoryId" cref="T:System.Int32" in="path">The custom search category identifier.</param>
            <param name="log">The log.</param>
            <returns>
            The collection of custom search selections.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.GetCustomSearchesByCategoryResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchParameterLookupValues">
            <summary>
            Azure function class for the GetCustomSearchParameterLookupValues service.  The service gets lookup values for a custom search parameter.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchParameterLookupValues.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchParameterLookupValues.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchParameterLookupValues.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchParameterLookupValues.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchParameterLookupValues"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchParameterLookupValues.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the custom search parameter lookup values.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetCustomSearchParameterLookupValues/{customSearchId}/{parameterName}</url>
            <param name="req">The request.</param>
            <param name="customSearchId" cref="T:System.Int32" in="path">The custom search definition id.</param>
            <param name="parameterName"  cref="T:System.String" in="path">The parameter id.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.CustomSearchParameterValueData[]" in="body">Dependent parameters.</param>
            <returns>
            The dataset column edit lookup values.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.GetUserCustomSearchDataResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchParameters">
            <summary>
            Azure function class for the GetCustomSearchParameters service.  The service gets the custom search parameters.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchParameters.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchParameters.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchParameters.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchParameters"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetCustomSearchParameters.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the custom search parameters.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetCustomSearchParameters/{customSearchDefinitionId}</url>
            <param name="req">The request.</param>
            <param name="customSearchDefinitionId" cref="T:System.Int32" in="path">The custom search definition id.</param>
            <param name="includeLookupValues" cref="T:System.Boolean" in="query">Value indicating whether the results should include the lookup values.</param>
            <param name="log">The log.</param>
            <returns>
            The collection of custom search parameters.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.GetCustomSearchParametersResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportCustomSearch">
            <summary>
            Azure function class for the ImportCustomSearchDefinition service.  The service imports a custom search.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportCustomSearch.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportCustomSearch.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportCustomSearch.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportCustomSearch.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportCustomSearch" /> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportCustomSearch.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports a custom search definition.
            The name is used as the key to identify the custom search. If no matching custom search is found, a new one is created.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ImportCustomSearch</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.CustomSearchDefinitionData" in="body">Custom Search to import.</param>
            <param name="sPOutputChanged" cref="T:System.Boolean" in="query">Value indicating whether the stored procedure output changed.</param>
            <returns>
            The custom search id.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.ExpressionValidationFailedResponse">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportUserProject">
            <summary>
            Azure function class for the ImportUserProject service.  The service imports a user project.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportUserProject.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportUserProject.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportUserProject.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportUserProject.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportUserProject"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportUserProject.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports a user project.
            The name is used as the key to identify the user project. If no matching user project is found, a new one is created.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ImportUserProject</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Projects.ProjectData" in="body">Project to import.</param>
            <param name="allowUpdate" cref="T:System.Boolean" in="query">Value indicating whether updates are allowed.</param>
            <returns>
            The action result.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Projects.ImportUserProjectResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteMetadataStoreItem">
            <summary>
            Azure function class for the DeleteMetadataStoreItem service.  The service deletes a metadata store item.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteMetadataStoreItem.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteMetadataStoreItem.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteMetadataStoreItem.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteMetadataStoreItem"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteMetadataStoreItem.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes a metadata store item.
            </summary>
            <group>Shared</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/Shared/DeleteMetadataStoreItem/{metadataStoreItemId}</url>
            <param name="req">The request.</param>
            <param name="metadataStoreItemId" cref="T:System.Int32" in="path">The metadata store item id.</param>
            <param name="log">The log.</param>
            <returns>
            Operation result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteUserDataStoreItem">
            <summary>
            Azure function class for the DeleteUserDataStoreItem service.  The service deletes an user data store item.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteUserDataStoreItem.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteUserDataStoreItem.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteUserDataStoreItem.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteUserDataStoreItem"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.DeleteUserDataStoreItem.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes an user data store item.
            </summary>
            <group>Shared</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/Shared/DeleteUserDataStoreItem/{userDataStoreItemId}</url>
            <param name="req">The request.</param>
            <param name="userDataStoreItemId" cref="T:System.Int32" in="path">The user data store item id.</param>
            <param name="log">The log.</param>
            <returns>
            Operation result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetMetadataStoreItem">
            <summary>
            Azure function class for the GetMetadataStoreItem service.  The service gets the metadata store items.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetMetadataStoreItem.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetMetadataStoreItem.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetMetadataStoreItem.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetMetadataStoreItem"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetMetadataStoreItem.Run(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the metadata store items.
            </summary>
            <group>Shared</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/Shared/GetMetadataStoreItem/{storeType}/{itemName}</url>
            <param name="req">The request.</param>
            <param name="storeType">The store data type.</param>
            <param name="itemName">The item name.</param>
            <param name="log">The log.</param>
            <param name="latestVersion" cref="T:System.Boolean" in="query">Value indicating whether the results should include only the latest version.</param>
            <returns>
            The collection of metadata store items.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.Shared.Model.GetMetadataStoreItemsResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetMetadataStoreItems">
            <summary>
            Azure function class for the GetMetadataStoreItems service.  The service gets the metadata store items.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetMetadataStoreItems.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetMetadataStoreItems.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetMetadataStoreItems.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetMetadataStoreItems"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetMetadataStoreItems.Run(Microsoft.AspNetCore.Http.HttpRequest,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the metadata store items.
            </summary>
            <group>Shared</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/Shared/GetMetadataStoreItems/{storeType}</url>
            <param name="req">The request.</param>
            <param name="storeType">The store data type.</param>
            <param name="log">The log.</param>
            <param name="latestVersion" cref="T:System.Boolean" in="query">Value indicating whether the results should include the post process.</param>
            <returns>
            The collection of metadata store items.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.Shared.Model.GetMetadataStoreItemsResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetUserDataStoreItems">
            <summary>
            Azure function class for the GetUserDataStoreItems service.  The service gets the user data store items.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetUserDataStoreItems.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetUserDataStoreItems.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetUserDataStoreItems.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetUserDataStoreItems"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetUserDataStoreItems.Run(Microsoft.AspNetCore.Http.HttpRequest,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the user data store items.
            Only returns the items without an owner type.
            </summary>
            <group>Shared</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/Shared/GetUserDataStoreItems/{storeType}</url>
            <param name="req">The request.</param>
            <param name="storeType">The store data type.</param>
            <param name="log">The log.</param>
            <returns>
            The collection of user data store items.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.Shared.Model.GetUserDataStoreItemsResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetUserDataStoreItemsByOwner">
            <summary>
            Azure function class for the GetUserDataStoreItemsByOwner service.  The service gets the user data store items by owner.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetUserDataStoreItemsByOwner.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetUserDataStoreItemsByOwner.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetUserDataStoreItemsByOwner.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetUserDataStoreItemsByOwner"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.GetUserDataStoreItemsByOwner.Run(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.String,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the user data store items by owner.
            </summary>
            <group>Shared</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/Shared/GetUserDataStoreItemsByOwner/{storeType}/{ownerType}/{ownerObjectId}</url>
            <param name="req">The request.</param>
            <param name="storeType">The store data type.</param>
            <param name="ownerType">The owner type.</param>
            <param name="ownerObjectId">The owner object id.</param>
            <param name="log">The log.</param>
            <returns>
            The collection of user data store items.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.Shared.Model.GetUserDataStoreItemsResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportMetadataStoreItems">
            <summary>
            Azure function class for the ImportMetadataStoreItems service.  The service imports an metadata store items.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportMetadataStoreItems.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportMetadataStoreItems.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportMetadataStoreItems.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportMetadataStoreItems.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportMetadataStoreItems" /> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportMetadataStoreItems.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports an metadata store items.
            The StoreType, Version and ItemName are used as the key to identify each metadata store item. If no matching metadata store item is found, a new one is created.
            </summary>
            <group>Shared</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/Shared/ImportMetadataStoreItems</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.Shared.Model.ImportMetadataStoreItemsData" in="body">Metadata store items to import.</param>
            <returns>
            The action result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportUserDataStoreItem">
            <summary>
            Azure function class for the ImportUserDataStoreItem service.  The service imports an user data store item.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportUserDataStoreItem.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportUserDataStoreItem.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportUserDataStoreItem.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportUserDataStoreItem.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportUserDataStoreItem" /> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.CustomSearches.ImportUserDataStoreItem.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports an user data store item.
            Id in the model is ignored and the user data store item is imported by StoreType, OwnerType, OwnerObjectId and ItemName.
            The StoreType, OwnerType, OwnerObjectId and ItemName are used as the key to identify the user data store item.
            If no matching user data store item is found, a new one is created.
            </summary>
            <group>Shared</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/Shared/ImportUserDataStoreItem</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.Shared.Model.UserDataStoreItemData" in="body">User data store item to import.</param>
            <returns>
            The user data store item id.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ApplyLandRegressionToSchedule">
            <summary>
            Azure function class for the ApplyLandRegressionToSchedule service.
            The service applies the land regression to schedule.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ApplyLandRegressionToSchedule.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ApplyLandRegressionToSchedule.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ApplyLandRegressionToSchedule.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ApplyLandRegressionToSchedule"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ApplyLandRegressionToSchedule.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Applies the land regression to schedule.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ApplyLandRegressionToSchedule/{rScriptPostProcessId}/{exceptionPostProcessId}</url>
            <param name="req">The request.</param>
            <param name="rScriptPostProcessId" cref="T:System.Int32" in="path">The RScript post process id.</param>
            <param name="exceptionPostProcessId" cref="T:System.Int32" in="path">The exception post process id.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ExecutePostProcessWithDataStream">
            <summary>
            Azure function class for the ExecutePostProcessWithDataStream service.  The service executes post process with data stream.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ExecutePostProcessWithDataStream.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ExecutePostProcessWithDataStream.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ExecutePostProcessWithDataStream.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ExecutePostProcessWithDataStream" /> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/cloudStorageProvider parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ExecutePostProcessWithDataStream.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Executes a post process with data stream.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ExecutePostProcessWithDataStream/{datasetId}/{datasetPostProcessId}</url>
            <param name="req">The request.</param>
            <param name="datasetPostProcessId" cref="T:System.Int32" in="path">The dataset post process id. Use -1 to execute all the post processes.</param>
            <param name="datasetId">The dataset id.</param>
            <param name="log">The log.</param>
            <param name="file" cref="T:System.String" format="binary" in="body">The rscript file.</param>
            <returns>
            The result of the operation.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetDatasetPostProcess">
            <summary>
            Azure function class for the GetDatasetPostProcess service.
            The service gets a dataset post-processes.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetDatasetPostProcess.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetDatasetPostProcess.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetDatasetPostProcess.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetDatasetPostProcess"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetDatasetPostProcess.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the dataset post process.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetDatasetPostProcess/{datasetPostProcessId}</url>
            <param name="req">The request.</param>
            <param name="datasetPostProcessId" cref="T:System.Int32" in="path">The dataset post process id.</param>
            <param name="log">The log.</param>
            <returns>
            The user map.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.DatasetPostProcesses.GetDatasetPostProcessResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetDatasetPostProcesses">
            <summary>
            Azure function class for the GetDatasetPostProcesses service.
            The service gets the post-processes for a dataset.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetDatasetPostProcesses.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetDatasetPostProcesses.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetDatasetPostProcesses.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetDatasetPostProcesses"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetDatasetPostProcesses.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the dataset post processes.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetDatasetPostProcesses/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <returns>
            The user map.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.DatasetPostProcesses.GetDatasetPostProcessesResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetRScriptModelDefaultExpressions">
            <summary>
            Azure function class for the GetRScriptModelDefaultExpressions service.
            The service gets the default expressions for an RScript Model.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetRScriptModelDefaultExpressions.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetRScriptModelDefaultExpressions.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetRScriptModelDefaultExpressions.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetRScriptModelDefaultExpressions"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetRScriptModelDefaultExpressions.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the default expressions for an RScript Model.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetRScriptModelDefaultExpressions/{rScriptModelId}</url>
            <param name="req">The request.</param>
            <param name="rScriptModelId" cref="T:System.Int32" in="path">The rscript model id.</param>
            <param name="log">The log.</param>
            <returns>
            The default expressions for the RScriptModel.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetRScriptPredictedEquation">
            <summary>
            Azure function class for the GetRScriptPredictedEquation service.
            The service gets the predicted equation for the RScript post process.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetRScriptPredictedEquation.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetRScriptPredictedEquation.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetRScriptPredictedEquation.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetRScriptPredictedEquation"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.GetRScriptPredictedEquation.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the predicted equation for the RScript post process.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetRScriptPredictedEquation/{rScriptPostProcessId}</url>
            <param name="req">The request.</param>
            <param name="rScriptPostProcessId" cref="T:System.Int32" in="path">The RScript post process id.</param>
            <param name="log">The log.</param>
            <param name="precision" cref="T:System.Int32" in="query">The precision (number of decimals) of the predicted values.</param>
            <returns>
            The predicted equation for the RScript post process.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ImportCustomModelingStepPostProcess">
            <summary>
            Azure function class for the ImportCustomModelingStepPostProcess service.
            The service imports the custom modeling step post process.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ImportCustomModelingStepPostProcess.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ImportCustomModelingStepPostProcess.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ImportCustomModelingStepPostProcess.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ImportCustomModelingStepPostProcess.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ImportCustomModelingStepPostProcess"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DatasetPostProcesses.ImportCustomModelingStepPostProcess.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports the custom modeling step post process.
            The name, role and type are used as the key to identify the post-process. If no matching post-process is found, a new one is created.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ImportCustomModelingStepPostProcess</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.DatasetPostProcesses.DatasetPostProcessData" in="body">Post process to import.</param>
            <returns>
            The post process id.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.ExpressionValidationFailedResponse">Bad request. Also can return a ErrorResultModel.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteDatasetPostProcess">
            <summary>
            Azure function class for the DeleteDatasetPostProcess service.  The service deletes a dataset post process.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteDatasetPostProcess.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteDatasetPostProcess.cloudStorageProvider">
            <summary>
            The cloud storage provider.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteDatasetPostProcess.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteDatasetPostProcess.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},PTASServicesCommon.CloudStorage.ICloudStorageProvider,CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteDatasetPostProcess"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="cloudStorageProvider">The cloud storage provider.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/cloudStorageProvider/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteDatasetPostProcess.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes a dataset post process.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/DeleteDatasetPostProcess/{datasetPostProcessId}</url>
            <param name="req">The request.</param>
            <param name="datasetPostProcessId" cref="T:System.Int32" in="path">The dataset post process id.</param>
            <param name="log">The log.</param>
            <returns>
            Operation result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteChartTemplate">
            <summary>
            Azure function class for the DeleteChartTemplate service.  The service deletes a chart template.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteChartTemplate.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteChartTemplate.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteChartTemplate.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteChartTemplate"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteChartTemplate.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes a chart template.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/DeleteChartTemplate/{chartTemplateId}</url>
            <param name="req">The request.</param>
            <param name="chartTemplateId" cref="T:System.Int32" in="path">The chart template id.</param>
            <param name="log">The log.</param>
            <returns>
            Operation result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteInteractiveChart">
            <summary>
            Azure function class for the DeleteInteractiveChart service.  The service deletes an interactive chart.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteInteractiveChart.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteInteractiveChart.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteInteractiveChart.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteInteractiveChart"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.DeleteInteractiveChart.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes an interactive chart.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/DeleteInteractiveChart/{interactiveChartId}</url>
            <param name="req">The request.</param>
            <param name="interactiveChartId" cref="T:System.Int32" in="path">The interactive chart id.</param>
            <param name="log">The log.</param>
            <returns>
            Operation result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetChartTemplate">
            <summary>
            Azure function class for the GetChartTemplate service.
            The service gets the information for a chart template.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetChartTemplate.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetChartTemplate.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetChartTemplate.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetChartTemplate"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetChartTemplate.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets a chart template.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetChartTemplate/{chartTemplateId}</url>
            <param name="req">The request.</param>
            <param name="chartTemplateId" cref="T:System.Int32" in="path">The chart template id.</param>
            <param name="log">The log.</param>
            <returns>
            The chart template.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.InteractiveCharts.GetChartTemplateResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetChartTemplates">
            <summary>
            Azure function class for the GetChartTemplates service.
            The service gets the chart templates.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetChartTemplates.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetChartTemplates.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetChartTemplates.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetChartTemplates"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetChartTemplates.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the chart templates.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetChartTemplates/{customSearchId}</url>
            <param name="req">The request.</param>
            <param name="customSearchId" cref="T:System.Int32" in="path">The custom search id.</param>
            <param name="log">The log.</param>
            <returns>
            The chart templates.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.InteractiveCharts.GetChartTemplatesResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetDatasetInteractiveCharts">
            <summary>
            Azure function class for the GetDatasetInteractiveCharts service.
            The service gets the interactive charts for a dataset.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetDatasetInteractiveCharts.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetDatasetInteractiveCharts.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetDatasetInteractiveCharts.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetDatasetInteractiveCharts"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetDatasetInteractiveCharts.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the interactive charts for a dataset.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetDatasetInteractiveCharts/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <returns>
            The user map.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.InteractiveCharts.GetDatasetInteractiveChartsResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetInteractiveChart">
            <summary>
            Azure function class for the GetGetInteractiveChart service.
            The service gets the information for an interactive chart.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetInteractiveChart.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetInteractiveChart.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetInteractiveChart.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetInteractiveChart"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetInteractiveChart.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets an interactive chart.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetInteractiveChart/{interactiveChartId}</url>
            <param name="req">The request.</param>
            <param name="interactiveChartId" cref="T:System.Int32" in="path">The interactive chart id.</param>
            <param name="log">The log.</param>
            <returns>
            The interactive charts for a dataset.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.InteractiveCharts.GetInteractiveChartResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetInteractiveChartTypes">
            <summary>
            Azure function class for the GetInteractiveChartTypes service.  The service gets all interactive chart types.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetInteractiveChartTypes.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetInteractiveChartTypes.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetInteractiveChartTypes.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetInteractiveChartTypes"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.GetInteractiveChartTypes.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets all interactive chart types.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetInteractiveChartTypes</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>
            All chart types.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.InteractiveCharts.GetInteractiveChartTypesResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.ImportChartTemplate">
            <summary>
            Azure function class for the ImportChartTemplate service.  The service imports a chart template.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.ImportChartTemplate.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.ImportChartTemplate.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.ImportChartTemplate.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.ImportChartTemplate.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.ImportChartTemplate"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.ImportChartTemplate.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports an interactive chart.
            The chart title is used as the key to identify the chart template. If no matching chart template is found, a new one is created.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ImportChartTemplate</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.InteractiveCharts.ChartTemplateData" in="body">Chart template to import.</param>
            <returns>
            The interactive chart id.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.ImportInteractiveChart">
            <summary>
            Azure function class for the ImportInteractiveChart service.  The service imports an interactive chart.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.ImportInteractiveChart.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.ImportInteractiveChart.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.ImportInteractiveChart.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.ImportInteractiveChart.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.ImportInteractiveChart"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.ImportInteractiveChart.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports an interactive chart.
            The chart title is used as the key to identify the interactive chart. If no matching interactive chart is found, a new one is created.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ImportInteractiveChart</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.InteractiveCharts.InteractiveChartData" in="body">Post process to import.</param>
            <returns>
            The interactive chart id.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.RenameInteractiveChart">
            <summary>
            Azure function class for the RenameInteractiveChart service.  The service renames an interactive chart.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.RenameInteractiveChart.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.RenameInteractiveChart.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.RenameInteractiveChart.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.RenameInteractiveChart.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.RenameInteractiveChart"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.InteractiveCharts.RenameInteractiveChart.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Renames an interactive chart.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/RenameInteractiveChart/{interactiveChartId}</url>
            <param name="req">The request.</param>
            <param name="interactiveChartId" cref="T:System.Int32" in="path">The interactive chart id.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.RenameInteractiveChartData" in="body">The rename interactive chart data.</param>
            <returns>
            Operation result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetFile">
            <summary>
            Azure function class for the GetDatasetFile service.  The service gets the dataset file.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetFile.RScriptBlobContainerName">
            <summary>
            RScript blob container name.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetFile.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetFile.cloudStorageProvider">
            <summary>
            The cloud storage provider.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetFile.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetFile.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},PTASServicesCommon.CloudStorage.ICloudStorageProvider,CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetFile"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="cloudStorageProvider">The cloud storage provider.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/cloudStorageProvider/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetFile.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the dataset post process file.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetDatasetFile/{datasetPostProcessId}/{fileName}</url>
            <param name="req">The request.</param>
            <param name="datasetPostProcessId" cref="T:System.Int32" in="path">The dataset post process id.</param>
            <param name="fileName" cref="T:System.String" in="path">The file name.</param>
            <param name="log">The log.</param>
            <returns>
            The file content result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetPostProcessDumpFiles">
            <summary>
            Azure function class for the GetPostProcessDumpFiles service.  The service gets the list of files in the blob for a post-process.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetPostProcessDumpFiles.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetPostProcessDumpFiles.cloudStorageProvider">
            <summary>
            The cloud storage provider.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetPostProcessDumpFiles.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetPostProcessDumpFiles.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},PTASServicesCommon.CloudStorage.ICloudStorageProvider,CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetPostProcessDumpFiles"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="cloudStorageProvider">The cloud storage provider.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/cloudStorageProvider/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetPostProcessDumpFiles.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the list of dump files for a failed post-process.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetPostProcessDumpFiles/{datasetPostProcessId}</url>
            <param name="req">The request.</param>
            <param name="datasetPostProcessId" cref="T:System.Int32" in="path">The dataset post process id.</param>
            <param name="log">The log.</param>
            <returns>
            The file content result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetStringMapValues">
            <summary>
            Azure function class for the GetStringMapValues service.  The service gets the string map values.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetStringMapValues.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetStringMapValues.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetStringMapValues.#ctor(CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetStringMapValues"/> class.
            </summary>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetStringMapValues.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the string map values.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetStringMapValues</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Datasets.GetStringMapValuesData" in="body">The string map properties to look for.</param>
            <returns>
            The action result.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Datasets.GetStringMapValuesResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ApplyQueryRowFilter">
            <summary>
            Azure function class for the ApplyQueryRowFilter service.  The service applies
            the query row filter in the dataset data.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ApplyQueryRowFilter.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ApplyQueryRowFilter.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ApplyQueryRowFilter.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ApplyQueryRowFilter.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ApplyQueryRowFilter"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ApplyQueryRowFilter.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Applies the query row filter in the dataset data.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ApplyQueryRowFilter/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Datasets.QueryRowFilterData" in="body">The query row filter.</param>
            <param name="usePostProcess" cref="T:System.Boolean" in="query">Value indicating whether the results should include the post process.</param>
            <param name="postProcessId" cref="T:System.Int32" in="query">Sets this value if usePostProcess is true and you want to use a specific post process.</param>
            <returns>
            The action result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ApplyRowFilter">
            <summary>
            Azure function class for the ApplyRowFilter service.  The service applies
            the row filter in the dataset data.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ApplyRowFilter.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ApplyRowFilter.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ApplyRowFilter.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ApplyRowFilter"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ApplyRowFilter.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Applies the row filter in the dataset data.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ApplyRowFilter/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ClearRowFilter">
            <summary>
            Azure function class for the ClearRowFilter service.  The service clears
            the row filter in the dataset data.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ClearRowFilter.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ClearRowFilter.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ClearRowFilter.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ClearRowFilter"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ClearRowFilter.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Clears the row filter in the dataset data.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ClearRowFilter/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <param name="preserveSelection" cref="T:System.Boolean" in="query">Value indicating whether the selection should be preserved.</param>
            <returns>
            The action result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Datasets.CullDataset">
            <summary>
            Azure function class for the CullDataset service.  The service deletes
            the filtered out rows in the dataset data and clears all the filtering state.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.CullDataset.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.CullDataset.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Datasets.CullDataset.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Datasets.CullDataset"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Datasets.CullDataset.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes the filtered out rows in the dataset data and clears all the filtering state.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/CullDataset/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ExecuteDatasetBackendUpdate">
            <summary>
            Azure function class for the ExecuteDatasetBackendUpdate service.  The service queues a job that will perform a backend update when executed.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ExecuteDatasetBackendUpdate.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ExecuteDatasetBackendUpdate.workerJobDbContextFactory">
            <summary>
            The SQL Server worker job db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ExecuteDatasetBackendUpdate.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ExecuteDatasetBackendUpdate.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.WorkerJob.WorkerJobDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ExecuteDatasetBackendUpdate" /> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="workerJobDbContextFactory">The worker job database context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Datasets.ExecuteDatasetBackendUpdate.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Executes a dataset backend update.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ExecuteDatasetBackendUpdate/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <returns>
            The Id of the queued Job.  -1 if no job was queued (because there was nothing to update).
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Datasets.RevertDatasetUpdates">
            <summary>
            Azure function class for the RevertDatasetUpdates service.  The service revert data updates done by the user.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.RevertDatasetUpdates.UpdateBatchSize">
            <summary>
            The max number of rows.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.RevertDatasetUpdates.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.RevertDatasetUpdates.MaxRowsRequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.RevertDatasetUpdates.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.RevertDatasetUpdates.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Datasets.RevertDatasetUpdates.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Datasets.RevertDatasetUpdates" /> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Datasets.RevertDatasetUpdates.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Reverts dataset data updates done by the user.  If rows are not specified, all rows are reverted.
            If rows are specified, a maximum of 250 rows can be received at a time.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/RevertDatasetUpdates/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Datasets.RevertDatasetUpdatesData" in="body">Body containing the rows to revert.  If not sent all rows are reverted.</param>
            <param name="log">The log.</param>
            <returns>
            The custom search data.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.GetUserCustomSearchDataResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Datasets.UnlockLockedDataset">
            <summary>
            Azure function class for the UnlockDataset service.  The service forces the unlock of a dataset.
            This service is useful in order to unlock datasets that have been db locked due to critical failures
            or crashes.  This won't work for data locks.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.UnlockLockedDataset.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Datasets.UnlockLockedDataset.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Datasets.UnlockLockedDataset.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Datasets.UnlockLockedDataset"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Datasets.UnlockLockedDataset.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Forces the unlock of a dataset.  This service is useful in order to unlock datasets that have been
            locked due to critical failures or crashes.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/UnlockLockedDataset/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.ExportDatasetDataToFile">
            <summary>
            Azure function class for the ExportDatasetDataToFile service.  The service generates a CSV file for the dataset.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ExportDatasetDataToFile.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ExportDatasetDataToFile.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.ExportDatasetDataToFile.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.ExportDatasetDataToFile" /> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.ExportDatasetDataToFile.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Exports the dataset to a file.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ExportDatasetDataToFile/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <param name="format" cref="T:System.String" in="query">The format of the file: xlsx or csv.</param>
            <param name="usePostProcess" cref="T:System.Boolean" in="query">Value indicating whether the results should include the post process.</param>
            <param name="postProcessId" cref="T:System.Int32" in="query">Sets this value if usePostProcess is true and you want to use a specific post process.</param>
            <param name="includeSecondaryDatasets" cref="T:System.Boolean" in="query">Value indicating whether the export should include the secondary datasets.</param>
            <returns>
            The file content result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnBreaksQuantile">
            <summary>
            Azure function class for the GetDatasetColumnBreakQuantile service.  The service gets class break for the specified column using the
            Quantile algorithm.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnBreaksQuantile.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnBreaksQuantile.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnBreaksQuantile.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnBreaksQuantile.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnBreaksQuantile"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnBreaksQuantile.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets class break for the specified column using the Quantile algorithm.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetDatasetColumnBreaksQuantile/{datasetId}/{columnName}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="columnName"  cref="T:System.String" in="path">The column name.</param>
            <param name="log">The log.</param>
            <param name="usePostProcess" cref="T:System.Boolean" in="query">Value indicating whether the results should include the post process.</param>
            <param name="postProcessId" cref="T:System.Int32" in="query">Sets this value if usePostProcess is true and you want to use a specific post process.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Datasets.ColumnQuantileBreaksData" in="body">Quantile break parameters.</param>
            <returns>
            Quantile breaks.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.GetUserCustomSearchDataResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnBreaksStdDeviation">
            <summary>
            Azure function class for the GetDatasetColumnBreaksStdDeviation service.  The service gets class break for the specified column using the
            StandardDeviation algorithm.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnBreaksStdDeviation.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnBreaksStdDeviation.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnBreaksStdDeviation.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnBreaksStdDeviation.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnBreaksStdDeviation"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnBreaksStdDeviation.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets class break for the specified column using the Standard Deviation algorithm.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetDatasetColumnBreaksStdDeviation/{datasetId}/{columnName}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="columnName"  cref="T:System.String" in="path">The column name.</param>
            <param name="log">The log.</param>
            <param name="usePostProcess" cref="T:System.Boolean" in="query">Value indicating whether the results should include the post process.</param>
            <param name="postProcessId" cref="T:System.Int32" in="query">Sets this value if usePostProcess is true and you want to use a specific post process.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Datasets.ColumnQuantileBreaksData" in="body">Quantile break parameters.</param>
            <returns>
            Standard Deviation breaks.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.GetUserCustomSearchDataResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.UpdateDatasetDataFromFile">
            <summary>
            Azure function class for the UpdateDatasetDataFromFile service.  The service updates the contents of a dataset using the contents of the file.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.UpdateDatasetDataFromFile.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.UpdateDatasetDataFromFile.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.UpdateDatasetDataFromFile.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.UpdateDatasetDataFromFile" /> class.
            May return Conflict(409) depending on dataset state.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/cloudStorageProvider parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.UpdateDatasetDataFromFile.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Updates a dataset from the contents of a file.  Only editable columns are updated.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/UpdateDatasetDataFromFile/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId">The dataset id.</param>
            <param name="log">The log.</param>
            <param name="file" cref="T:System.String" format="binary" in="body">The rscript file.</param>
            <returns>
            The result of the operation.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.DeleteRScriptModel">
            <summary>
            Azure function class for the DeleteRScriptModel service.  The service deletes a Rscript model.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.DeleteRScriptModel.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.DeleteRScriptModel.cloudStorageProvider">
            <summary>
            The cloud storage provider.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.DeleteRScriptModel.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.DeleteRScriptModel.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},PTASServicesCommon.CloudStorage.ICloudStorageProvider,CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.DeleteRScriptModel"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="cloudStorageProvider">The cloud storage provider.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/cloudStorageProvider/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.DeleteRScriptModel.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes a rscript model.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/DeleteRScriptModel/{rscriptModelId}</url>
            <param name="req">The request.</param>
            <param name="rscriptModelId" cref="T:System.Int32" in="path">The rscript model id.</param>
            <param name="softDelete" cref="T:System.Boolean" in="query">Indicates whether to a tempt a soft or full delete.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.GetRScriptModel">
            <summary>
            Azure function class for the GetRScriptModel service.  The service gets a rscript model.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.GetRScriptModel.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.GetRScriptModel.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.GetRScriptModel.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.GetRScriptModel"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.GetRScriptModel.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the rscript model.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetRScriptModel/{rscriptId}</url>
            <param name="req">The request.</param>
            <param name="rscriptId" cref="T:System.Int32" in="path">The rscript model id.</param>
            <param name="includeLookupValues" cref="T:System.Boolean" in="query">Value indicating whether the results should include the lookup values.</param>
            <param name="log">The log.</param>
            <returns>
            The rscript model.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.RScriptModel.GetRScriptModelResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.GetRScriptModels">
            <summary>
            Azure function class for the GetRScriptModels service.  The service gets the rscript models.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.GetRScriptModels.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.GetRScriptModels.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.GetRScriptModels.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.GetRScriptModels"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.GetRScriptModels.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the rscript models.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetRScriptModels/</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="includeDeleted" cref="T:System.Boolean" in="query">Indicates whether to a tempt a soft or full delete.</param>
            <returns>
            The rscript models.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.RScriptModel.GetRScriptModelsResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.ImportRScriptModel">
            <summary>
            Azure function class for the ImportRScriptModel service.  The service imports a rscript model.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.ImportRScriptModel.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.ImportRScriptModel.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.ImportRScriptModel.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.ImportRScriptModel.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.ImportRScriptModel"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.ImportRScriptModel.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports a user project.
            The name is used as the key to identify the RScript model. If no matching RScript model is found, a new one is created.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ImportRScriptModel</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.RScriptModel.RScriptModelData" in="body">rscript model to import.</param>
            <returns>
            The action result.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.UploadRScriptFile">
            <summary>
            Azure function class for the UploadRScriptFile service.  The service uploads the rscript file.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.UploadRScriptFile.RScriptBlobContainerName">
            <summary>
            RScript blob container name.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.UploadRScriptFile.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.UploadRScriptFile.cloudStorageProvider">
            <summary>
            The cloud storage provider.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.UploadRScriptFile.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.UploadRScriptFile.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},PTASServicesCommon.CloudStorage.ICloudStorageProvider,CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.UploadRScriptFile"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="cloudStorageProvider">The cloud storage provider.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/cloudStorageProvider/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.RScriptModel.UploadRScriptFile.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Uploads the rscript file.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/UploadRScriptFile/{modelId}</url>
            <param name="req">The request.</param>
            <param name="modelId">The rscript model id.</param>
            <param name="log">The log.</param>
            <param name="FileName" cref="T:System.String" in="header">The file name.</param>
            <param name="file" cref="T:System.String" format="binary" in="body">The rscript file.</param>
            <returns>
            The action result..
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.DeleteCalculatedColumn">
            <summary>
            Azure function class for the DeleteCalculatedColumn service.  The service deletes a calculated column to the dataset view.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DeleteCalculatedColumn.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DeleteCalculatedColumn.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DeleteCalculatedColumn.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.DeleteCalculatedColumn"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DeleteCalculatedColumn.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes a calculated column to the dataset view.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/DeleteCalculatedColumn/{datasetId}/{columnName}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="columnName" cref="T:System.String" in="path">The column name.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.DeleteDataset">
            <summary>
            Azure function class for the DeleteDataset service.  The service deletes a dataset and all its child objects (including charts and DB tables).
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DeleteDataset.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DeleteDataset.cloudStorageProvider">
            <summary>
            The cloud storage provider.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DeleteDataset.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DeleteDataset.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},PTASServicesCommon.CloudStorage.ICloudStorageProvider,CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.DeleteDataset"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="cloudStorageProvider">The cloud storage provider.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/cloudStorageProvider/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DeleteDataset.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes a dataset.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/DeleteDataset/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.DeleteDatasetFolder">
            <summary>
            Azure function class for the DeleteDatasetFolder service.  The service deletes the folder.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DeleteDatasetFolder.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DeleteDatasetFolder.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DeleteDatasetFolder.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DeleteDatasetFolder.cloudStorageProvider">
            <summary>
            The cloud storage provider.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DeleteDatasetFolder.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},PTASServicesCommon.CloudStorage.ICloudStorageProvider,CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.DeleteDatasetFolder"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="cloudStorageProvider">The cloud storage provider.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/cloudStorageProvider/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DeleteDatasetFolder.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes the dataset folder.
            Returns Conflict(409) if the folder could not be deleted.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/DeleteDatasetFolder</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CreateFolderData" in="body">Folder data.</param>
            <returns>
            The delete dataset folder result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.DeleteDatasetFolderResponse">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.DuplicateDataset">
            <summary>
            Azure function class for the DuplicateDataset service.  The service duplicates a dataset and all its child objects (including charts and DB tables).
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DuplicateDataset.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DuplicateDataset.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DuplicateDataset.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DuplicateDataset.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.DuplicateDataset"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DuplicateDataset.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Duplicates a dataset.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/DuplicateDataset/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Datasets.DuplicateDatasetData" in="body">The dataset data.</param>
            <param name="applyRowFilter" cref="T:System.Boolean" in="query">Value indicating whether the row filter should be used to define the rows to duplicate.</param>
            <param name="applyUserSelection" cref="T:System.Boolean" in="query">Value indicating whether the user selection should be used to define the rows to duplicate.</param>
            <returns>
            The action result.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.ExecuteCustomSearchResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="405" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Operation not supported.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.ExecuteDatasetPostProcess">
            <summary>
            Azure function class for the ExecuteDatasetPostProcess service.  The service executes a dataset post process.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ExecuteDatasetPostProcess.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ExecuteDatasetPostProcess.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ExecuteDatasetPostProcess.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.ExecuteDatasetPostProcess.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.ExecuteDatasetPostProcess"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.ExecuteDatasetPostProcess.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Executes a dataset post process.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ExecuteDatasetPostProcess/{datasetId}/{datasetPostProcessId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="datasetPostProcessId" cref="T:System.Int32" in="path">The dataset post process id. Use -1 to execute all the post processes.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.CustomSearchParameterValueData[]" in="body">Post process parameters.</param>
            <returns>
            A unique Id that can be used to get the database data.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetChartData">
            <summary>
            Azure function class for the GetChartData service.  The service gets the interactive chart data.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetChartData.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetChartData.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetChartData.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetChartData"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetChartData.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the interactive chart data.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetChartData/{chartId}</url>
            <param name="req">The request.</param>
            <param name="chartId" cref="T:System.Int32" in="path">The chart id.</param>
            <param name="log">The log.</param>
            <param name="usePostProcess" cref="T:System.Boolean" in="query">Value indicating whether the results should include the post process.</param>
            <param name="continuationToken" cref="T:System.String" in="query">The continuation token.</param>
            <param name="postProcessId" cref="T:System.Int32" in="query">Sets this value if usePostProcess is true and you want to use a specific post process.</param>
            <param name="isPlot" cref="T:System.Boolean" in="query">Value indicating whether return the plot part of the chart. Only applies for ScatterPlot.</param>
            <returns>
            The interactive chart data.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.InteractiveCharts.GetChartDataResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetChartTemplateData">
            <summary>
            Azure function class for the GetChartTemplateData service.  The service gets the chart template data.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetChartTemplateData.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetChartTemplateData.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetChartTemplateData.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetChartTemplateData"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetChartTemplateData.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the chart template data.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetChartTemplateData/{chartId}/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="chartTemplateId" cref="T:System.Int32" in="path">The chart id.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <param name="usePostProcess" cref="T:System.Boolean" in="query">Value indicating whether the results should include the post process.</param>
            <param name="continuationToken" cref="T:System.String" in="query">The continuation token.</param>
            <param name="postProcessId" cref="T:System.Int32" in="query">Sets this value if usePostProcess is true and you want to use a specific post process.</param>
            <param name="isPlot" cref="T:System.Boolean" in="query">Value indicating whether return the plot part of the chart. Only applies for ScatterPlot.</param>
            <returns>
            The chart template data.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.InteractiveCharts.GetChartDataResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetDataset">
            <summary>
            Azure function class for the GetDataset service.  The service gets the dataset.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDataset.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDataset.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDataset.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},PTASServicesCommon.CloudStorage.ICloudStorageProvider,CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetDataset"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="cloudStorageProvider">The cloud storage provider.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/dataDbContextFactory/cloudStorageProvider parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDataset.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the dataset.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetDataset/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Int32" in="path">The dataset id.</param>
            <param name="includeDependencies" cref="T:System.Boolean" in="query">Value indicating whether should be included the dependencies.</param>
            <param name="log">The log.</param>
            <returns>
            The dataset.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Datasets.GetDatasetResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetDataSetColumnEditLookupValues">
            <summary>
            Azure function class for the GetDataSetColumnEditLookupValues service.  The service gets the dataset column edit lookup values.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDataSetColumnEditLookupValues.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDataSetColumnEditLookupValues.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDataSetColumnEditLookupValues.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDataSetColumnEditLookupValues.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetDataSetColumnEditLookupValues"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If serviceContextFactory/dbContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDataSetColumnEditLookupValues.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the dataset column edit lookup values.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetDataSetColumnEditLookupValues/{datasetId}/{columnName}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="columnName"  cref="T:System.String" in="path">The column name.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.CustomSearchParameterValueData[]" in="body">Dependent parameters.</param>
            <returns>
            The dataset column edit lookup values.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.GetUserCustomSearchDataResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnLookupValues">
            <summary>
            Azure function class for the GetDatasetColumnLookupValues service.  The service gets the dataset column lookup values.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnLookupValues.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnLookupValues.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnLookupValues.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnLookupValues"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnLookupValues.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the dataset column lookup values.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetDatasetColumnLookupValues/{datasetId}/{columnName}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="columnName"  cref="T:System.String" in="path">The column name.</param>
            <param name="log">The log.</param>
            <param name="usePostProcess" cref="T:System.Boolean" in="query">Value indicating whether the results should include the post process.</param>
            <param name="postProcessId" cref="T:System.Int32" in="query">Sets this value if usePostProcess is true and you want to use a specific post process.</param>
            <returns>
            The dataset column lookup values.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.GetUserCustomSearchDataResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnRangeValues">
            <summary>
            Azure function class for the GetDatasetColumnRangeValues service.  The service gets the dataset column range values.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnRangeValues.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnRangeValues.dataDbContextFactory">
            <summary>
            The SQL Server data db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnRangeValues.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnRangeValues.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDataDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnRangeValues"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="dataDbContextFactory">The SQL Server data db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumnRangeValues.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the dataset column range values.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetDatasetColumnRangeValues/{datasetId}/{columnName}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="columnName"  cref="T:System.String" in="path">The column name.</param>
            <param name="log">The log.</param>
            <param name="usePostProcess" cref="T:System.Boolean" in="query">Value indicating whether the results should include the post process.</param>
            <param name="ignoreEmpty" cref="T:System.Boolean" in="query">Value indicating whether should be ignored empty values.</param>
            <param name="postProcessId" cref="T:System.Int32" in="query">Sets this value if usePostProcess is true and you want to use a specific post process.</param>
            <returns>
            The dataset column range values.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.GetUserCustomSearchDataResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumns">
            <summary>
            Azure function class for the GetDatasetColumns service.  The service gets the dataset columns.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumns.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumns.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumns.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumns"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetColumns.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the dataset columns.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetDatasetColumns/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <param name="usePostProcess" cref="T:System.Boolean" in="query">Value indicating whether the results should include the post process.</param>
            <param name="postProcessId" cref="T:System.Int32" in="query">Sets this value if usePostProcess is true and you want to use a specific post process.</param>
            <param name="includeDependencies" cref="T:System.Boolean" in="query">Value indicating whether should be included the dependencies.</param>
            <returns>
            The dataset columns.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.GetDatasetColumnsResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetData">
            <summary>
            Azure function class for the GetDatasetData service.  The service receives the ticket
            generated by ExecuteCustomSearch and sends back the data.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetData.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetData.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetData.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetData.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetData"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetData.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Receives the ticket generated by ExecuteCustomSearch and sends back the data.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetDatasetData/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Datasets.CustomSearchGridData" in="body">Grid parameters.</param>
            <param name="usePostProcess" cref="T:System.Boolean" in="query">Value indicating whether the results should include the post process.</param>
            <param name="postProcessId" cref="T:System.Int32" in="query">Sets this value if usePostProcess is true and you want to use a specific post process.</param>
            <param name="includeUpdateInfo" cref="T:System.Int32" in="query">Value indicating whether to include information on what rows and fields were updated.</param>
            <returns>
            The dataset data.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.GetUserCustomSearchDataResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetsForUser">
            <summary>
            Azure function class for the GetDatasetsForUser service.  The service gets the datasets for user.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetsForUser.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetsForUser.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetsForUser.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetsForUser"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetsForUser.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the datasets available to a user.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetDatasetsForUser/{userId}</url>
            <param name="req">The request.</param>
            <param name="userId" cref="T:System.Guid" in="path">The user id.</param>
            <param name="log">The log.</param>
            <returns>
            The datasets.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Datasets.GetDatasetsForUserResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetState">
            <summary>
            Azure function class for the GetDatasetState  service.  The service gets the dataset state.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetState.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetState.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetState.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetState"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetState.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetDatasetState/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <returns>
            The dataset state.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Datasets.GetDatasetStateResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetUserState">
            <summary>
            Azure function class for the GetDatasetUserState service.  The service gets the dataset client state.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetUserState.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetUserState.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetUserState.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetUserState"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetDatasetUserState.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the dataset client state.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetDatasetUserState/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <returns>
            The dataset client state.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Datasets.GetDatasetUserStateResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetFoldersForUser">
            <summary>
            Azure function class for the GetFoldersForUser service.  The service gets the folders for the user.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetFoldersForUser.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetFoldersForUser.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetFoldersForUser.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetFoldersForUser"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetFoldersForUser.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the folders for the user.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetDatasetFoldersForUser/{userId}</url>
            <param name="req">The request.</param>
            <param name="userId" cref="T:System.Guid" in="path">The user id.</param>
            <param name="log">The log.</param>
            <returns>
            The folder for user.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.GetFoldersForUserResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.GetProjectHealth">
            <summary>
            Azure function class for the GetProjectHealthService.  The service gets information about project health.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetProjectHealth.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.GetProjectHealth.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetProjectHealth.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.GetProjectHealth" /> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">Either dbContextFactory or serviceContextFactory is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.GetProjectHealth.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets information about project health.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetProjectHealth/{projectId}</url>
            <param name="req">The request.</param>
            <param name="projectId" cref="T:System.Int32" in="path">The project id.</param>
            <param name="log">The log.</param>
            <returns> The project health information. </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Projects.ProjectHealthData">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.ImportCalculatedColumns">
            <summary>
            Azure function class for the ImportCalculatedColumns service.  The service imports the calculated columns to the dataset view.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ImportCalculatedColumns.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ImportCalculatedColumns.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ImportCalculatedColumns.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.ImportCalculatedColumns.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.ImportCalculatedColumns"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.ImportCalculatedColumns.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports the calculated columns to the dataset view.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ImportCalculatedColumns/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Datasets.ImportCalculatedColumnsData" in="body">Colum data.</param>
            <returns>
            The action result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.ImportExceptionPostProcess">
            <summary>
            Azure function class for the ImportExceptionPostProcess service.  The service imports exception post process.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ImportExceptionPostProcess.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ImportExceptionPostProcess.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ImportExceptionPostProcess.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.ImportExceptionPostProcess.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.ImportExceptionPostProcess"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/IServiceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.ImportExceptionPostProcess.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports the exception post process.
            The name, role and type are used as the key to identify the post-process. If no matching post-process is found, a new one is created.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ImportExceptionPostProcess</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.DatasetPostProcesses.DatasetPostProcessData" in="body">Post process to import.</param>
            <returns>
            The post process id.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.ExpressionValidationFailedResponse">Bad request. Also can return a ErrorResultModel.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.ImportFilterPostProcess">
            <summary>
            Azure function class for the ImportFilterPostProcess service.  The service imports filter post process.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ImportFilterPostProcess.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ImportFilterPostProcess.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ImportFilterPostProcess.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.ImportFilterPostProcess.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.ImportFilterPostProcess"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.ImportFilterPostProcess.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports the exception post process.
            The name, role and type are used as the key to identify the post-process. If no matching post-process is found, a new one is created.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ImportFilterPostProcess</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.DatasetPostProcesses.DatasetPostProcessData" in="body">Post process to import.</param>
            <returns>
            The post process id.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.ExpressionValidationFailedResponse">Bad request. Also can return a ErrorResultModel.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.ImportRScriptPostProcess">
            <summary>
            Azure function class for the ImportRScriptPostProcess service.  The service imports filter post process.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ImportRScriptPostProcess.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ImportRScriptPostProcess.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ImportRScriptPostProcess.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.ImportRScriptPostProcess.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.ImportRScriptPostProcess"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.ImportRScriptPostProcess.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports the exception post process.
            The name, role and type are used as the key to identify the post-process. If no matching post-process is found, a new one is created.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ImportRScriptPostProcess</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.DatasetPostProcesses.DatasetPostProcessData" in="body">Post process to import.</param>
            <returns>
            The post process id.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.ExpressionValidationFailedResponse">Bad request. Also can return a ErrorResultModel.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.ImportStoredProcedureUpdatePostProcess">
            <summary>
            Azure function class for the ImportStoredProcedureUpdatePostProcess service.
            The service imports stored procedure update post process.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ImportStoredProcedureUpdatePostProcess.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ImportStoredProcedureUpdatePostProcess.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.ImportStoredProcedureUpdatePostProcess.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.ImportStoredProcedureUpdatePostProcess.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.ImportStoredProcedureUpdatePostProcess"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/IServiceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.ImportStoredProcedureUpdatePostProcess.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports the stored procedure update post-process.
            The name, role and type are used as the key to identify the post-process. If no matching post-process is found, a new one is created.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ImportStoredProcedureUpdatePostProcess</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.DatasetPostProcesses.DatasetPostProcessData" in="body">Post process to import.</param>
            <returns>
            The post process id.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.ExpressionValidationFailedResponse">Bad request. Also can return a ErrorResultModel.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.ApplyModel">
            <summary>
            Azure function class for the ApplyModel service.  The service applies the user project model.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.ApplyModel.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.ApplyModel.#ctor(CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.ApplyModel"/> class.
            </summary>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.ApplyModel.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Applies the user project model.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ApplyModel/{projectId}</url>
            <param name="req">The request.</param>
            <param name="projectId" cref="T:System.Int32" in="path">The user project id.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.ExecuteCustomSearchResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.BulkUpdate">
            <summary>
            Azure function class for the BulkUpdate service.  The service applies the bulk update to the user project model.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.BulkUpdate.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.BulkUpdate.#ctor(CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.BulkUpdate"/> class.
            </summary>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.BulkUpdate.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Applies the bulk update to the user project model.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/BulkUpdate/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.ExecuteCustomSearchResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.CreateNewProjectVersion">
            <summary>
            Azure function class for the CreateNewProjectVersion service.  The service creates a new project version.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.CreateNewProjectVersion.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.CreateNewProjectVersion.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.CreateNewProjectVersion.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.CreateNewProjectVersion"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.CreateNewProjectVersion.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Creates the new project version.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/CreateNewProjectVersion/{projectId}</url>
            <param name="req">The request.</param>
            <param name="projectId" cref="T:System.Int32" in="path">The id of the project to clone.</param>
            <param name="log">The log.</param>
            <returns>
            The user project response.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Projects.ImportUserProjectResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.DeleteProjectVersion">
            <summary>
            Azure function class for the DeleteProjectVersion service.  The service deletes a project version for a project and all child objects.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.DeleteProjectVersion.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.DeleteProjectVersion.cloudStorageProvider">
            <summary>
            The cloud storage provider.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.DeleteProjectVersion.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.DeleteProjectVersion.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},PTASServicesCommon.CloudStorage.ICloudStorageProvider,CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.DeleteProjectVersion"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="cloudStorageProvider">The cloud storage provider.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/cloudStorageProvider/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.DeleteProjectVersion.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes a project version.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/DeleteProjectVersion/{projectId}</url>
            <param name="req">The request.</param>
            <param name="projectId" cref="T:System.Int32" in="path">The project id.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.DeleteUserProject">
            <summary>
            Azure function class for the DeleteUserProject service.  The service deletes a user project and all its child objects.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.DeleteUserProject.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.DeleteUserProject.cloudStorageProvider">
            <summary>
            The cloud storage provider.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.DeleteUserProject.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.DeleteUserProject.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},PTASServicesCommon.CloudStorage.ICloudStorageProvider,CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.DeleteUserProject"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="cloudStorageProvider">The cloud storage provider.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/cloudStorageProvider/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.DeleteUserProject.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes a user project.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/DeleteUserProject/{projectId}</url>
            <param name="req">The request.</param>
            <param name="projectId" cref="T:System.Int32" in="path">The user project id.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.FreezeProject">
            <summary>
            Azure function class for the FreezeProject service.  The service freezes a user project.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.FreezeProject.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.FreezeProject.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.FreezeProject.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.FreezeProject"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.FreezeProject.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Freezes a user project.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/FreezeProject/{projectId}</url>
            <param name="req">The request.</param>
            <param name="projectId" cref="T:System.Int32" in="path">The id of the project to freeze.</param>
            <param name="log">The log.</param>
            <returns>
            The freeze project response.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Projects.FreezeProjectResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetProjects">
            <summary>
            Azure function class for the GetProjects service.  The service gets the projects for all users.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetProjects.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetProjects.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetProjects.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetProjects"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetProjects.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the projects for all users.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetProjects</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="includedYears" cref="T:System.Int32" in="query">Limits the result to the projects of the last n years.</param>
            <returns>
            The user projects.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Projects.GetUserProjectResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetProjectTypes">
            <summary>
            Azure function class for the GetProjectTypes service.  The service gets the project types.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetProjectTypes.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetProjectTypes.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetProjectTypes.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetProjectTypes"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetProjectTypes.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the project types.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetProjectTypes</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>
            The collection of project types.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Projects.GetProjectTypesResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetUserProject">
            <summary>
            Azure function class for the GetUserProject service.  The service gets a user project.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetUserProject.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetUserProject.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetUserProject.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetUserProject"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetUserProject.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the user project.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetUserProject/{projectId}</url>
            <param name="req">The request.</param>
            <param name="projectId" cref="T:System.Int32" in="path">The project id.</param>
            <param name="includeDependencies" cref="T:System.Boolean" in="query">Value indicating whether should be included the dependencies.</param>
            <param name="log">The log.</param>
            <returns>
            The user project.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Projects.GetUserProjectResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetUserProjects">
            <summary>
            Azure function class for the GetUserProjects service.  The service gets the user projects for a user.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetUserProjects.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetUserProjects.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetUserProjects.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetUserProjects"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.GetUserProjects.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the user projects.
            </summary>
            <group>CustomSearches</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/GetUserProjects/{userId}</url>
            <param name="req">The request.</param>
            <param name="userId" cref="T:System.Guid" in="path">The user id.</param>
            <param name="log">The log.</param>
            <returns>
            The user projects.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Projects.GetUserProjectResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.ImportProjectType">
            <summary>
            Azure function class for the ImportProjectType service.  The service imports a project type.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.ImportProjectType.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.ImportProjectType.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.ImportProjectType.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.ImportProjectType.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.ImportProjectType"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.ImportProjectType.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports a proyect type.
            The name is used as the key to identify the project type. If no matching project type is found, a new one is created.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/ImportProjectType</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Projects.ProjectTypeData" in="body">Project type to import.</param>
            <returns>
            The action result.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.RecalculateParcelValue">
            <summary>
            Azure function class for the ApplyModel service.  The service recalculates the parcel value.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.RecalculateParcelValue.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.RecalculateParcelValue.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.RecalculateParcelValue.#ctor(CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.RecalculateParcelValue"/> class.
            </summary>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.RecalculateParcelValue.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Recalculates the parcel value.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/RecalculateParcelValue/{projectId}/{major}/{minor}</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Projects.RecalculateParcelValueData" in="body">Colum data.</param>
            <returns>
            The action result.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.CustomSearches.ExecuteCustomSearchResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="500" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Internal server error.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.RefreshProjectDatasets">
            <summary>
            Azure function class for the RefreshProjectDatasets service.  The service refreshes the project datasets.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.RefreshProjectDatasets.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.RefreshProjectDatasets.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.RefreshProjectDatasets.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.RefreshProjectDatasets"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.RefreshProjectDatasets.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Refreshes the project datasets.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/RefreshProjectDatasets/{projectId}</url>
            <param name="req">The request.</param>
            <param name="projectId" cref="T:System.Int32" in="path">The user project id.</param>
            <param name="log">The log.</param>
            <param name="allVersions" cref="T:System.Boolean" in="query">Value indicating whether should be refreshed all project versions.</param>
            <returns>
            The action result.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Projects.ImportUserProjectResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.SetProjectLockLevel">
            <summary>
            Azure function class for the SetProjectLockLevel service.  The service sets the project lock level.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.SetProjectLockLevel.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.Projects.SetProjectLockLevel.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.SetProjectLockLevel.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.Projects.SetProjectLockLevel"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.Projects.SetProjectLockLevel.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes a calculated column to the project view.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/SetProjectLockLevel/{projectId}/{isLocked}</url>
            <param name="req">The request.</param>
            <param name="projectId" cref="T:System.Int32" in="path">The project id.</param>
            <param name="isLocked" cref="T:System.Boolean" in="path">A value indicating if the project should be locked.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.RefreshDataset">
            <summary>
            Azure function class for the RefreshDataset service.  The service refreshes a dataset.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RefreshDataset.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RefreshDataset.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.RefreshDataset.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.RefreshDataset"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.RefreshDataset.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Refreshes a dataset.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/RefreshDataset/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.RenameFolder">
            <summary>
            Azure function class for the RenameFolder service.  The service renames the folder.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RenameFolder.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RenameFolder.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.RenameFolder.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.RenameFolder.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.RenameFolder"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.RenameFolder.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Renames the folder.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/RenameFolder</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.RenameFolderData" in="body">The folder data.</param>
            <returns>
            The task result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.SaveDatasetUserState">
            <summary>
            Azure function class for the SaveDatasetUserState service.  The service saves the dataset client state.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.SaveDatasetUserState.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.SaveDatasetUserState.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.SaveDatasetUserState.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.SaveDatasetUserState"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.SaveDatasetUserState.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Saves the dataset client state.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/SaveDatasetUserState/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.SetDatasetLockLevel">
            <summary>
            Azure function class for the SetDatasetLockLevel service.  The service sets the dataset lock level.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.SetDatasetLockLevel.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.SetDatasetLockLevel.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.SetDatasetLockLevel.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.SetDatasetLockLevel"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.SetDatasetLockLevel.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,System.Boolean,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Sets the dataset lock level.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/SetDatasetLockLevel/{datasetId}/{isLocked}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="isLocked" cref="T:System.Boolean" in="path">A value indicating if the dataset should be locked.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="405" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Operation not supported.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.UpdateDataset">
            <summary>
            Azure function class for the UpdateDataset service.  The service updates the dataset.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.UpdateDataset.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.UpdateDataset.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.UpdateDataset.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.UpdateDataset.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.UpdateDataset"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.UpdateDataset.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Updates the dataset.  Updatable properties:  ParameterValues, DatasetName and FolderPath.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/UpdateDataset</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.Datasets.DatasetData" in="body">rscript model to import.</param>
            <returns>
            The action result.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.IdResult">The request succeeded. The JobId (-1 if there are no changes).</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetAttributes">
            <summary>
            Azure function class for the UpdateDatasetAttributes service.  The service updates the dataset attributes.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetAttributes.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetAttributes.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetAttributes.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetAttributes.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetAttributes"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetAttributes.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Updates the dataset attributes.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/UpdateDatasetAttributes/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.UpdateDatasetAttributesData" in="body">The dataset attributes data.</param>
            <returns>
            The task result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="405" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Operation not supported.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetData">
            <summary>
            Azure function class for the UpdateDatasetData service.  The service updates the dataset data.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetData.UpdateBatchSize">
            <summary>
            The max number of rows.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetData.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetData.MaxRowsRequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetData.EmptyBatchRequestBodyErrorMessage">
            <summary>
            The empty batch request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetData.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetData.dataDbContextFactory">
            <summary>
            The SQL Server data db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetData.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetData.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDataDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetData"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="dataDbContextFactory">The SQL Server data db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.UpdateDatasetData.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Updates the dataset data.  This method supports a maximum of 250 rows to update at a time.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>CustomSearches</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/CustomSearches/UpdateDatasetData/{datasetId}</url>
            <param name="req">The request.</param>
            <param name="datasetId" cref="T:System.Guid" in="path">The dataset id.</param>
            <param name="log">The log.</param>
            <param name="includeUpdatedRows" cref="T:System.Boolean" in="query">Value indicating whether the results should include the updated rows.</param>
            <param name="clientId" cref="T:System.String" in="query">The client id.</param>
            <returns>
            The updated rows if returnUpdaterRows is true.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.CustomSearches.Model.GetUserCustomSearchDataResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
            <response code="409" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">A conflict was found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.CustomSearches.Functions.DeleteFolder">
            <summary>
            Azure function class for the DeleteFolder service.  The service deletes the folder.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DeleteFolder.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DeleteFolder.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.CustomSearches.Functions.DeleteFolder.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DeleteFolder.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.CustomSearches.Functions.DeleteFolder"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.CustomSearches.Functions.DeleteFolder.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes the user map.
            Returns Conflict(409) if the folder could not be deleted.
            </summary>
            <group>GIS</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/GIS/DeleteFolder</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.Gis.Model.CreateFolderData" in="body">Folder data.</param>
            <returns>
            The delete folder result.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Exception.CustomSearchesFunctionsErrorMessages">
            <summary>
            Class containing the different error messages returned by the odata functions.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Exception.CustomSearchesFunctionsErrorMessages.UnhandledExceptionError">
            <summary>
            The unhandled exception error.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Exception.CustomSearchesFunctionsErrorMessages.ArgumentNullExceptionError">
            <summary>
            The request body error.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Exception.CustomSearchesFunctionsErrorMessages.ArgumentOutOfRangeExceptionError">
            <summary>
            Error text for ArgumentOutOfRangeException.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Exception.CustomSearchesFunctionsErrorMessages.RequestBodyError">
            <summary>
            The request body error.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Exception.CustomSearchesFunctionsErrorMessages.InvalidTokenExceptionError">
            <summary>
            The invalid token error.
            </summary>
        </member>
        <member name="T:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler">
            <summary>
            Handles and maps exceptions that come from the different providers to the exceptions that the server should output.  Also logs the internal exception.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.GlobalExceptionHandler(System.Func{System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}},Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Maps an untyped exception.
            </summary>
            <param name="lambda">The lambda to execute.</param>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>The output response for the input exception.</returns>
            <exception cref="T:System.ArgumentNullException">If any of the parameters is NULL.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.HandleUntypedException(System.Exception,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Maps an untyped exception.
            </summary>
            <param name="ex">The exception.</param>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>The output response for the input exception.</returns>
            <exception cref="T:System.ArgumentNullException">If any of the parameters is NULL.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.HandleArgumentNullException(System.ArgumentNullException,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Maps an argument null exception.
            </summary>
            <param name="ex">The exception.</param>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>The output response for the input exception.</returns>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.HandleArgumentOutOfRangeException(System.ArgumentOutOfRangeException,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Maps an argument null exception.
            </summary>
            <param name="ex">The exception.</param>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>The output response for the input exception.</returns>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.HandleNotSupportedException(System.NotSupportedException,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Maps a not supported exception.
            </summary>
            <param name="ex">The exception.</param>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>The output response for the input exception.</returns>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.HandleCustomSearchesRequestBodyException(CustomSearchesServicesLibrary.Exception.CustomSearchesRequestBodyException,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Maps an exception from the request body deserialization.
            </summary>
            <param name="ex">The exception.</param>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>The output response for the input exception.</returns>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.HandleCustomSearchesDatabaseException(CustomSearchesServicesLibrary.Exception.CustomSearchesDatabaseException,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Maps an exception from the database.
            </summary>
            <param name="ex">The exception.</param>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>The output response for the input exception.</returns>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.HandleCustomSearchesJsonException(CustomSearchesServicesLibrary.Exception.CustomSearchesJsonException,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Maps an exception from the json.
            </summary>
            <param name="ex">The exception.</param>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>The output response for the input exception.</returns>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.HandleCustomSearchesEntityNotFoundException(CustomSearchesServicesLibrary.Exception.CustomSearchesEntityNotFoundException,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Maps an entity not found exception.
            </summary>
            <param name="ex">The exception.</param>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>The output response for the input exception.</returns>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.HandleCustomSearchesConflictException(CustomSearchesServicesLibrary.Exception.CustomSearchesConflictException,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Maps an conflict exception.
            </summary>
            <param name="ex">The exception.</param>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>The output response for the input exception.</returns>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.HandleInvalidExpressionResultException(CustomSearchesServicesLibrary.Exception.InvalidExpressionResultException,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Maps an invalid expression result exception.
            </summary>
            <param name="ex">The exception.</param>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>The output response for the input exception.</returns>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.HandleExpressionValidationException(CustomSearchesServicesLibrary.Exception.CustomExpressionValidationException,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Maps an conflict exception.
            </summary>
            <param name="ex">The exception.</param>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>The output response for the input exception.</returns>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.HandleValidationException(CustomSearchesServicesLibrary.Exception.CustomSearchValidationException,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Maps a validation exception.
            </summary>
            <param name="ex">The exception.</param>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>The output response for the input exception.</returns>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.HandleFolderManagerException(CustomSearchesServicesLibrary.Exception.FolderManagerException,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Maps an folder manager exception.
            </summary>
            <param name="ex">The exception.</param>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>The output response for the input exception.</returns>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.HandleInvalidTokenException(CustomSearchesServicesLibrary.Exception.InvalidTokenException,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Maps an invalid token exception.
            </summary>
            <param name="ex">The exception.</param>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>The output response for the input exception.</returns>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.HandleAuthorizationException(CustomSearchesServicesLibrary.Exception.AuthorizationException,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Maps an authorization exception.
            </summary>
            <param name="ex">The exception.</param>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>The output response for the input exception.</returns>
        </member>
        <member name="M:CustomSearchesFunctions.Exception.CustomSearchesFunctionsExceptionHandler.HandleCustomSearchException(System.Exception,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Handles the custom search exception.
            </summary>
            <param name="ex">The ex.</param>
            <param name="req">The req.</param>
            <param name="log">The log.</param>
        </member>
        <member name="T:CustomSearchesFunctions.Exception.ErrorResultModel">
            <summary>
            Model for error results.
            </summary>
        </member>
        <member name="P:CustomSearchesFunctions.Exception.ErrorResultModel.Message">
            <summary>
            Gets or sets the message.
            </summary>
        </member>
        <member name="P:CustomSearchesFunctions.Exception.ErrorResultModel.Details">
            <summary>
            Gets or sets the details field.
            </summary>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.CreateFolder">
            <summary>
            Azure function class for the CreateFolder service.  The service creates the folder.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.CreateFolder.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.CreateFolder.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.CreateFolder.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.CreateFolder.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.CreateFolder"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.CreateFolder.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Creates the user map.
            </summary>
            <group>GIS</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/GIS/CreateFolder</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.Gis.Model.CreateFolderData" in="body">Custom search parameters.</param>
            <returns>
            The folder id.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.CreateMapRenderer">
            <summary>
            Azure function class for the CreateMapRenderer service.  The service creates the map renderer.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.CreateMapRenderer.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.CreateMapRenderer.customSearchesDbContextFactory">
            <summary>
            The SQL Server custom searches db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.CreateMapRenderer.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.CreateMapRenderer.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.CreateMapRenderer.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.CreateMapRenderer"/> class.
            </summary>
            <param name="customSearchesDbContextFactory">The SQL Server custom searches db context factory.</param>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.CreateMapRenderer.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Creates the map renderer.
            May return Conflict(409) depending on dataset state.
            </summary>
            <group>GIS</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/GIS/CreateMapRenderer</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.Gis.Model.MapRendererData" in="body">Custom search parameters.</param>
            <returns>
            The map renderer id.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.CreateUserMap">
            <summary>
            Azure function class for the CreateUserMap service.  The service creates the user map.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.CreateUserMap.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.CreateUserMap.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.CreateUserMap.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.CreateUserMap.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.CreateUserMap"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.CreateUserMap.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Creates the user map.
            </summary>
            <group>GIS</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/GIS/CreateUserMap</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.Gis.Model.UserMapData" in="body">Custom search parameters.</param>
            <returns>
            The action result.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.DeleteMapRenderer">
            <summary>
            Azure function class for the DeleteMapRenderer service.  The service deletes the map renderer.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.DeleteMapRenderer.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.DeleteMapRenderer.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.DeleteMapRenderer.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.DeleteMapRenderer"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.DeleteMapRenderer.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes the map renderer.
            </summary>
            <group>GIS</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/GIS/DeleteMapRenderer/{mapRendererId}</url>
            <param name="req">The request.</param>
            <param name="mapRendererId" cref="T:System.Int32" in="path">The map renderer id.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.DeleteUserMap">
            <summary>
            Azure function class for the DeleteUserMap service.  The service deletes the user map.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.DeleteUserMap.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.DeleteUserMap.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.DeleteUserMap.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.DeleteUserMap"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.DeleteUserMap.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Deletes the user map.
            </summary>
            <group>GIS</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/GIS/DeleteUserMap/{userMapId}</url>
            <param name="req">The request.</param>
            <param name="userMapId" cref="T:System.Int32" in="path">The user map id.</param>
            <param name="log">The log.</param>
            <returns>
            The action result.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.GetFoldersForUser">
            <summary>
            Azure function class for the GetFoldersForUser service.  The service gets the folders for the user.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.GetFoldersForUser.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.GetFoldersForUser.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.GetFoldersForUser.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.GetFoldersForUser"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.GetFoldersForUser.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the folders for the user.
            </summary>
            <group>GIS</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/GIS/GetFoldersForUser/{userId}/{folderItemType}</url>
            <param name="req">The request.</param>
            <param name="userId" cref="T:System.Guid" in="path">The user id.</param>
            <param name="folderItemType" cref="T:System.String" in="path">The folder item type.</param>
            <param name="log">The log.</param>
            <returns>
            The folder for user.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.GetGisLayerDownloadUrl">
            <summary>
            Azure function class for the GetGisLayerDownloadUrl service.  The service gets the GIS layer download URL.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.GetGisLayerDownloadUrl.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.GetGisLayerDownloadUrl.#ctor(CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.GetGisLayerDownloadUrl"/> class.
            </summary>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.GetGisLayerDownloadUrl.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the GIS layer download URL.
            </summary>
            <group>GIS</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/GIS/GetGisLayerDownloadUrl/{layerSourceId}</url>
            <param name="req">The request.</param>
            <param name="layerSourceId" cref="T:System.Int32" in="path">The layer source id.</param>
            <param name="log">The log.</param>
            <returns>
            The GIS layer download URL response.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.Gis.Model.GetGisLayerDownloadUrlResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.GetLayerSources">
            <summary>
            Azure function class for the GetLayerSources service.  The service gets the layer sources.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.GetLayerSources.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.GetLayerSources.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.GetLayerSources.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.GetLayerSources"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.GetLayerSources.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the layer sources.
            </summary>
            <group>GIS</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/GIS/GetLayerSources/</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>
            The user map.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.GetMapRendererCategories">
            <summary>
            Azure function class for the GetMapRendererCategories service.  The service gets the map renderer categories.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.GetMapRendererCategories.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.GetMapRendererCategories.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.GetMapRendererCategories.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.GetMapRendererCategories"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.GetMapRendererCategories.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the map renderer categories.
            </summary>
            <group>GIS</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/GIS/GetMapRendererCategories</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>
            The collection of map renderer categories.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.GetParcelMediaInfo">
            <summary>
            Azure function class for the GetParcelMediaInfo service.  The service gets media information for a parcel.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.GetParcelMediaInfo.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.GetParcelMediaInfo.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.GetParcelMediaInfo.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.GetParcelMediaInfo"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.GetParcelMediaInfo.Run(Microsoft.AspNetCore.Http.HttpRequest,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the media info for a parcel.
            </summary>
            <group>GIS</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/GIS/GetParcelMediaInfo/{parcelId}</url>
            <param name="req">The request.</param>
            <param name="parcelId" cref="T:System.String" in="path">The parcel id.</param>
            <param name="log">The log.</param>
            <returns>
            The parcel media info.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.GetUserMap">
            <summary>
            Azure function class for the GetUserMap service.  The service gets the user map.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.GetUserMap.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.GetUserMap.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.GetUserMap.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.GetUserMap"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.GetUserMap.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the user map.
            </summary>
            <group>GIS</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/GIS/GetUserMap/{userMapId}</url>
            <param name="req">The request.</param>
            <param name="userMapId" cref="T:System.Int32" in="path">The user map id.</param>
            <param name="log">The log.</param>
            <returns>
            The user map.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.GetUserMapCategories">
            <summary>
            Azure function class for the GetUserMapCategories service.  The service gets the user map categories.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.GetUserMapCategories.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.GetUserMapCategories.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.GetUserMapCategories.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.GetUserMapCategories"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.GetUserMapCategories.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the user map categories.
            </summary>
            <group>GIS</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/GIS/GetUserMapCategories</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <returns>
            The collection of user map categories.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.GetUserMapsForUser">
            <summary>
            Azure function class for the GetUserMap service.  The service gets the user maps for the user.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.GetUserMapsForUser.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.GetUserMapsForUser.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.GetUserMapsForUser.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.GetUserMapsForUser"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.GetUserMapsForUser.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Guid,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the user maps for the user.
            </summary>
            <group>GIS</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/GIS/GetUserMapsForUser/{userId}</url>
            <param name="req">The request.</param>
            <param name="userId" cref="T:System.Guid" in="path">The user id.</param>
            <param name="log">The log.</param>
            <param name="folderType" cref="T:System.String" in="query">The folder type.</param>
            <returns>
            The user map.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.ImportLayerSource">
            <summary>
            Azure function class for the ImportLayerSource service.  The service creates a new user layer.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.ImportLayerSource.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.ImportLayerSource.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.ImportLayerSource.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.ImportLayerSource.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.ImportLayerSource"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.ImportLayerSource.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports a layer source and sets up map layer so it can be handled by MapServer.
            The name is used as the key to identify the layer source. If no matching layer source is found, a new one is created.
            </summary>
            <group>GIS</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/GIS/ImportLayerSource</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.Gis.Model.LayerSourceData" in="body">Custom search parameters.</param>
            <returns>
            The action result.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.ImportMobileLayerRenderer">
            <summary>
            Azure function class for the ImportMobileLayerRenderer service.  The service creates a new user layer.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.ImportMobileLayerRenderer.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.ImportMobileLayerRenderer.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.ImportMobileLayerRenderer.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.ImportMobileLayerRenderer.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.ImportMobileLayerRenderer"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.ImportMobileLayerRenderer.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Imports a layer source and sets up map layer so it can be handled by MapServer.
            The name is used as the key to identify the layer source. If no matching layer source is found, a new one is created.
            </summary>
            <group>GIS</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/GIS/ImportMobileLayerRenderer</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.Gis.Model.MobileLayerRendererData" in="body">Mobile layer renderer information.</param>
            <returns>
            The action result.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.RenameFolder">
            <summary>
            Azure function class for the RenameFolder service.  The service renames the folder.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.RenameFolder.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.RenameFolder.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.RenameFolder.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.RenameFolder.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.RenameFolder"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.RenameFolder.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Renames the folder.
            </summary>
            <group>GIS</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/GIS/RenameGISFolder</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.Gis.Model.RenameFolderData" in="body">The folder data.</param>
            <returns>
            The task result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
            <response code="403" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Not authorized request.</response>
            <response code="404" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Entity was not found.</response>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.RenameUserMap">
            <summary>
            Azure function class for the RenameUserMap service.  The service renames the user map.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.RenameUserMap.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.RenameUserMap.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.RenameUserMap.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.RenameUserMap.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.RenameUserMap"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.RenameUserMap.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Renames the user map.
            </summary>
            <group>GIS</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/GIS/RenameUserMap/{userMapId}</url>
            <param name="req">The request.</param>
            <param name="userMapId" cref="T:System.Int32" in="path">The user map id.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.Gis.Model.RenameUserMapData" in="body">The rename user map data.</param>
            <returns>
            The action result.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.SetMapRendererCategories">
            <summary>
            Azure function class for the SetMapRendererCategories service.  The service sets the map renderer categories.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.SetMapRendererCategories.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.SetMapRendererCategories.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.SetMapRendererCategories.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.SetMapRendererCategories.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.SetMapRendererCategories"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.SetMapRendererCategories.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Sets the map renderer categories.
            </summary>
            <group>GIS</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/GIS/SetMapRendererCategories/{mapRendererId}</url>
            <param name="req">The request.</param>
            <param name="mapRendererId">The map renderer id.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.Gis.Model.SetMapRendererCategoriesData" in="body">The map renderer categories data to set.</param>
            <returns>
            The action result.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.SetUserMapCategories">
            <summary>
            Azure function class for the SetUserMapCategories service.  The service sets the user map categories.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.SetUserMapCategories.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.SetUserMapCategories.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.SetUserMapCategories.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.SetUserMapCategories.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.SetUserMapCategories"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.SetUserMapCategories.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Sets the user map categories.
            </summary>
            <group>GIS</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/GIS/SetUserMapCategories/{userMapId}</url>
            <param name="req">The request.</param>
            <param name="userMapId">The user map id.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.Gis.Model.SetUserMapCategoriesData" in="body">The user map categories data to set.</param>
            <returns>
            The action result.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.UpdateMapRenderer">
            <summary>
            Azure function class for the UpdateMapRenderer service.  The service updates the map renderer.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.UpdateMapRenderer.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.UpdateMapRenderer.customSearchesDbContextFactory">
            <summary>
            The SQL Server custom searches db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.UpdateMapRenderer.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.UpdateMapRenderer.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.UpdateMapRenderer.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.CustomSearches.CustomSearchesDbContext},PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.UpdateMapRenderer"/> class.
            </summary>
            <param name="customSearchesDbContextFactory">The SQL Server custom searches db context factory.</param>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.UpdateMapRenderer.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Updates the map renderer.
            </summary>
            <group>GIS</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/GIS/UpdateMapRenderer</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.Gis.Model.MapRendererData" in="body">The map renderer data.</param>
            <returns>
            The action result.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Functions.UpdateUserMap">
            <summary>
            Azure function class for the UpdateUserMap service.  The service updates the user map.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.UpdateUserMap.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.UpdateUserMap.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Functions.UpdateUserMap.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.UpdateUserMap.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Functions.UpdateUserMap"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If sqlServerConfigurationProvider/tileFeatureDataProviderFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Functions.UpdateUserMap.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Updates the user map.
            </summary>
            <group>GIS</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/GIS/UpdateUserMap</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:CustomSearchesServicesLibrary.Gis.Model.UserMapData" in="body">The user map data.</param>
            <returns>
            The action result.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Gis.Services.GetUserMapsByCategory">
            <summary>
            Azure function class for the GetUserMapsByCategory service.  The service gets the user maps by category.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Services.GetUserMapsByCategory.dbContextFactory">
            <summary>
            The SQL Server db context factory.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Gis.Services.GetUserMapsByCategory.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Services.GetUserMapsByCategory.#ctor(PTASServicesCommon.DependencyInjection.IFactory{CustomSearchesEFLibrary.Gis.GisDbContext},CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Gis.Services.GetUserMapsByCategory"/> class.
            </summary>
            <param name="dbContextFactory">The SQL Server db context factory.</param>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Gis.Services.GetUserMapsByCategory.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the user maps by category.
            </summary>
            <group>GIS</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/GIS/GetUserMapsByCategory/{categoryId}</url>
            <param name="req">The request.</param>
            <param name="categoryId" cref="T:System.Int32" in="path">The user map category identifier.</param>
            <param name="log">The log.</param>
            <returns>
            The collection of user maps.
            </returns>
            <response code="200" cref="T:CustomSearchesServicesLibrary.Gis.Model.GetUserMapsForUserResponse">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.Jobs.Functions.DismissUserJobNotification">
            <summary>
            Azure function class to dismiss the user notifications for jobs.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Jobs.Functions.DismissUserJobNotification.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Jobs.Functions.DismissUserJobNotification.#ctor(CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Jobs.Functions.DismissUserJobNotification"/> class.
            </summary>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Jobs.Functions.DismissUserJobNotification.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Dismisses the user notifications for jobs.
            </summary>
            <param name="req">The request.</param>
            <param name="notificationId">The notification identifier. If the value is -1, all notifications are dismissed.</param>
            <param name="log">The log.</param>
            <returns>
            The result of the operation.
            </returns>
            <group>Jobs</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/Jobs/DismissUserJobNotification/{notificationId}</url>
        </member>
        <member name="T:CustomSearchesFunctions.Jobs.Functions.GetJobStatus">
            <summary>
            Azure function class to get the job status.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Jobs.Functions.GetJobStatus.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Jobs.Functions.GetJobStatus.#ctor(CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Jobs.Functions.GetJobStatus"/> class.
            </summary>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Jobs.Functions.GetJobStatus.Run(Microsoft.AspNetCore.Http.HttpRequest,System.Int32,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the job status.
            </summary>
            <group>Jobs</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/Jobs/GetJobStatus/{jobId}</url>
            <param name="req">The request.</param>
            <param name="jobId" cref="T:System.Int32" in="path">The job id.</param>
            <param name="log">The log.</param>
            <returns>
            The user info.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Jobs.Functions.GetUserJobNotifications">
            <summary>
            Azure function class to get the user notifications for jobs.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Jobs.Functions.GetUserJobNotifications.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Jobs.Functions.GetUserJobNotifications.#ctor(CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Jobs.Functions.GetUserJobNotifications"/> class.
            </summary>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Jobs.Functions.GetUserJobNotifications.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Gets the user notifications for jobs.
            </summary>
            <group>Jobs</group>
            <verb>GET</verb>
            <url>http://localhost:7071/v2/API/Jobs/GetUserJobNotifications</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="maxJobs" cref="T:System.Int32" in="query">Value indicating the max count of pending jobs to be retrieved.</param>
            <param name="maxNotifications" cref="T:System.Int32" in="query">Value indicating the max count of notifications to be retrieved.</param>
            <returns>
            The user notifications and jobs.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Jobs.Functions.StartJob">
            <summary>
            Azure function class to start async jobs.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Jobs.Functions.StartJob.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Jobs.Functions.StartJob.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Jobs.Functions.StartJob.#ctor(CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Jobs.Functions.StartJob"/> class.
            </summary>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If dataDbContextFactory/serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Jobs.Functions.StartJob.Run(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.String,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Starts a job.
            </summary>
            <param name="req">The request.</param>
            <param name="queueName">Name of the queue.</param>
            <param name="jobType">Type of the processor.</param>
            <param name="log">The log.</param>
            <param name="timeout" cref="T:System.Int32" in="query">Specifies a timeout for the job.</param>
            <returns>
            The user info.
            </returns>
            <group>Jobs</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/Jobs/StartJob</url>
        </member>
        <member name="T:CustomSearchesFunctions.Shared.Functions.ConvertFromExcelToJson">
            <summary>
            Azure function class for the ConvertFromExcelToJson service.  The service converts excel file to json object.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Shared.Functions.ConvertFromExcelToJson.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Shared.Functions.ConvertFromExcelToJson.#ctor(CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Shared.Functions.ConvertFromExcelToJson"/> class.
            </summary>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If serviceContextFactory is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Shared.Functions.ConvertFromExcelToJson.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Converts excel file to json object.
            </summary>
            <group>Shared</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/Shared/ConvertFromExcelToJson</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="file" cref="T:System.String" format="binary" in="body">The excel file.</param>
            <param name="hasHeader" cref="T:System.Boolean" in="query">Value indicating whether the excel contains headers.</param>
            <returns>
            The json result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.Shared.Functions.ConvertFromJsonToExcel">
            <summary>
            Azure function class for the ConvertFromJsonToExcel service.  The service converts from json object to excel file.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Shared.Functions.ConvertFromJsonToExcel.RequestBodyErrorMessage">
            <summary>
            The request body error message.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Shared.Functions.ConvertFromJsonToExcel.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Shared.Functions.ConvertFromJsonToExcel.#ctor(CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Shared.Functions.ConvertFromJsonToExcel" /> class.
            </summary>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If serviceContextFactory parameter is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Shared.Functions.ConvertFromJsonToExcel.Run(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Converts from json object to excel file.
            </summary>
            <group>Shared</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/Shared/ConvertFromJsonToExcel</url>
            <param name="req">The request.</param>
            <param name="log">The log.</param>
            <param name="postBody" cref="T:Newtonsoft.Json.Linq.JObject" in="body">The json object.</param>
            <returns>
            The file content result.
            </returns>
            <response code="200">The request succeeded.</response>
            <response code="400" cref="T:CustomSearchesFunctions.Exception.ErrorResultModel">Bad request.</response>
        </member>
        <member name="T:CustomSearchesFunctions.Shared.Functions.Swagger">
            <summary>
            Swagger function.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Shared.Functions.Swagger.RunSwagger(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Extensions.Logging.ILogger,Microsoft.Azure.WebJobs.ExecutionContext)">
            <summary>
            Runs the swagger.
            </summary>
            <param name="req">The req.</param>
            <param name="log">The log.</param>
            <param name="executionContext">The execution context.</param>
            <returns>
            Swagger document.
            </returns>
        </member>
        <member name="T:CustomSearchesFunctions.Shared.Functions.UIClientHub">
            <summary>
            Serverless hub that manages to the UI client connection with the Azure SignalR service.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Shared.Functions.UIClientHub.serviceContextFactory">
            <summary>
            The service context factory.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Shared.Functions.UIClientHub.#ctor(CustomSearchesServicesLibrary.ServiceFramework.IServiceContextFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomSearchesFunctions.Shared.Functions.UIClientHub"/> class.
            </summary>
            <param name="serviceContextFactory">The service context factory.</param>
            <exception cref="T:System.ArgumentNullException">If serviceContextFactory is null.</exception>
        </member>
        <member name="M:CustomSearchesFunctions.Shared.Functions.UIClientHub.Negotiate(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the SignalR connection information for the UI client hub.
            </summary>
            <group>Hub</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/Negotiate</url>
            <param name="req">The request.</param>
            <returns>The SignalR connection information.</returns>
            <response code="200" cref="T:Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRConnectionInfo">The request succeeded.</response>
        </member>
        <member name="T:CustomSearchesFunctions.Shared.Functions.WorkerHub">
            <summary>
            Serverless hub that manages the worker connection with the Azure SignalR service.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Shared.Functions.WorkerHub.GetWorkerSignalRInfo(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRConnectionInfo)">
            <summary>
            Gets the SignalR connection information for the worker hub.
            </summary>
            <group>Hub</group>
            <verb>POST</verb>
            <url>http://localhost:7071/v2/API/WorkerHub/Negotiate</url>
            <param name="req">The req.</param>
            <param name="connectionInfo">The connection information.</param>
            <returns>
            The SignalR connection information.
            </returns>
            <response code="200" cref="T:Microsoft.Azure.WebJobs.Extensions.SignalRService.SignalRConnectionInfo">The request succeeded.</response>
        </member>
        <member name="T:CustomSearchesFunctions.Startup.Startup">
            <summary>
            Startup class.
            </summary>
            <seealso cref="T:Microsoft.Azure.Functions.Extensions.DependencyInjection.FunctionsStartup" />
        </member>
        <member name="F:CustomSearchesFunctions.Startup.Startup.LogDynamicSqlStatementsInDbSettingName">
            <summary>
            The LogDynamicSqlStatementsInDb setting name
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Startup.Startup.SQLServerConnectionStringSettingName">
            <summary>
            The SQL server connection string setting name.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Startup.Startup.SQLServerDataConnectionStringSettingName">
            <summary>
            The SQL server data connection string setting name.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Startup.Startup.StorageConnectionStringSettingName">
            <summary>
            The storage connection string setting name.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Startup.Startup.PremiumStorageConnectionStringSettingName">
            <summary>
            The premium storage connection string setting name.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Startup.Startup.AzureSignalRConnectionStringSettingName">
            <summary>
            The Azure SignalR connection string setting name.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Startup.Startup.AdminRolesSettingName">
            <summary>
            The admin roles setting name.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Startup.Startup.LogSqlStatementsSettingName">
            <summary>
            The Log Sql Statements setting name.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Startup.Startup.SignalRHubEndpointSettingName">
            <summary>
            The SighalR hub endpoint setting name.
            </summary>
        </member>
        <member name="F:CustomSearchesFunctions.Startup.Startup.ActiveTelemetryChannelsSettingName">
            <summary>
            The active telemetry channels setting name.
            </summary>
        </member>
        <member name="M:CustomSearchesFunctions.Startup.Startup.Configure(Microsoft.Azure.Functions.Extensions.DependencyInjection.IFunctionsHostBuilder)">
            <summary>
            Startup configuration.
            </summary>
            <param name="builder">The host builder.</param>
        </member>
        <member name="M:CustomSearchesFunctions.Startup.Startup.CreateLoggerFactory(Microsoft.Azure.Functions.Extensions.DependencyInjection.IFunctionsHostBuilder)">
            <summary>
            Creates the logger factory.
            </summary>
            <param name="builder">The builder.</param>
            <returns>The logger factory.</returns>
        </member>
        <member name="M:CustomSearchesFunctions.Startup.Startup.CreateCustomSearchesDbContextFactory(PTASServicesCommon.TokenProvider.IServiceTokenProvider,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Creates the custom searches database context factory.
            </summary>
            <param name="tokenProvider">The token provider.</param>
            <param name="loggerFactory">The logger factory.</param>
            <param name="config">Configuration settings.</param>
            <returns>
            The database factory.
            </returns>
        </member>
        <member name="M:CustomSearchesFunctions.Startup.Startup.CreateCustomSearchesDataDbContextFactory(PTASServicesCommon.TokenProvider.IServiceTokenProvider,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Creates the custom searches data database context factory.
            </summary>
            <param name="tokenProvider">The token provider.</param>
            <param name="loggerFactory">The logger factory.</param>
            <param name="config">Configuration settings.</param>
            <returns>
            The database factory.
            </returns>
        </member>
        <member name="M:CustomSearchesFunctions.Startup.Startup.CreateGisDbContextFactory(PTASServicesCommon.TokenProvider.IServiceTokenProvider,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Creates the gis database context factory.
            </summary>
            <param name="tokenProvider">The token provider.</param>
            <param name="loggerFactory">The logger factory.</param>
            <param name="config">Configuration settings.</param>
            <returns>
            The database factory.
            </returns>
        </member>
        <member name="M:CustomSearchesFunctions.Startup.Startup.CreateWorkerJobDbContextFactory(PTASServicesCommon.TokenProvider.IServiceTokenProvider,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Creates the worker job database context factory.
            </summary>
            <param name="tokenProvider">The token provider.</param>
            <param name="loggerFactory">The logger factory.</param>
            <param name="config">Configuration settings.</param>
            <returns>
            The database factory.
            </returns>
        </member>
    </members>
</doc>
